Microchip MPLAB XC8 Compiler V1.38 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v1.38\dat\en_msgs.txt -cs \
  -h+dist/default/production\iRobot.X.production.sym \
  --cmf=dist/default/production\iRobot.X.production.cmf -z -Q16F877A \
  -oC:\Users\Jason\AppData\Local\Temp\saoo.2 \
  -Mdist/default/production/iRobot.X.production.map -E1 -ver=XC8 \
  -ASTACK=0110h-016fh -pstack=STACK -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh \
  -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\Jason\AppData\Local\Temp\saoo.obj \
  dist/default/production\iRobot.X.production.obj 

Object code version is 3.11

Machine type is 16F877A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Jason\AppData\Local\Temp\saoo.obj
                end_init                             12       12        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        1     400E       0
dist/default/production\iRobot.X.production.obj
                cinit                                15       15       22        8       0
                intentry                              4        4        E        8       0
                text24                              E61      E61       32     1CC2       0
                text23                              F0F      F0F       45     1E1E       0
                text22                              D75      D75        A     1AEA       0
                text21                              D7F      D7F        C     1AFE       0
                text20                              E93      E93       3E     1D26       0
                text19                              6B3      6B3       8F        8       0
                text18                              ED1      ED1       3E     1DA2       0
                text17                              E3E      E3E       23     1C7C       0
                text16                               37       37      38D        8       0
                text15                              F54      F54       45     1EA8       0
                text14                              DBC      DBC       14     1B78       0
                text13                              D6C      D6C        9     1AD8       0
                text12                              DA9      DA9       13     1B52       0
                text11                              58B      58B       97        8       0
                text10                              DFE      DFE       20     1BFC       0
                text9                               742      742       8D        8       0
                text8                               E1E      E1E       20     1C3C       0
                text7                               F99      F99       67     1F32       0
                text6                               622      622       91        8       0
                text5                               D8B      D8B        F     1B16       0
                text4                               DD0      DD0       16     1BA0       0
                text3                               7CF      7CF       29        8       0
                text2                               DE6      DE6       18     1BCC       0
                text1                               D9A      D9A        F     1B34       0
                maintext                            3C4      3C4      1C7        8       0
                cstackBANK0                          20       20       37       20       1
                cstackCOMMON                         70       70        B       70       1
                clrtext                             7F8      7F8        8        8       0
                bssBANK1                             A0       A0       16       A0       1
                dataBANK0                            6D       6D        2       20       1
                bssBANK0                             57       57       16       20       1
                bssCOMMON                            7B       7B        2       70       1
                bitbssCOMMON                        3E8       7D        1       70       1     8
                strings                             800      800       1F     1000       0
                idataBANK0                          D6A      D6A        2     1AD4       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             12       12        3         0
                cinit                                15       15       22         0
                intentry                              4        4        E         0
                reset_vec                             0        0        3         0
                text24                              E61      E61       32         0
                text23                              F0F      F0F       45         0
                text22                              D75      D75        A         0
                text21                              D7F      D7F        C         0
                text20                              E93      E93       3E         0
                text19                              6B3      6B3       8F         0
                text18                              ED1      ED1       3E         0
                text17                              E3E      E3E       23         0
                text16                               37       37      38D         0
                text15                              F54      F54       45         0
                text14                              DBC      DBC       14         0
                text13                              D6C      D6C        9         0
                text12                              DA9      DA9       13         0
                text11                              58B      58B       97         0
                text10                              DFE      DFE       20         0
                text9                               742      742       8D         0
                text8                               E1E      E1E       20         0
                text7                               F99      F99       67         0
                text6                               622      622       91         0
                text5                               D8B      D8B        F         0
                text4                               DD0      DD0       16         0
                text3                               7CF      7CF       29         0
                text2                               DE6      DE6       18         0
                text1                               D9A      D9A        F         0
                maintext                            3C4      3C4      1C7         0
                clrtext                             7F8      7F8        8         0
                idataBANK0                          D6A      D6A        2         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             800      800       1F         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        B         1
                bssCOMMON                            7B       7B        2         1
                bitbssCOMMON                        3E8       7D        1         1

        CLASS   BANK0          
                cstackBANK0                          20       20       37         1
                dataBANK0                            6D       6D        2         1
                bssBANK0                             57       57       16         1

        CLASS   BANK1          
                bssBANK1                             A0       A0       16         1

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  0007FC  000800         8       0  CODE        2
                cstackBANK0                    000020  00004F  00006F        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                bssBANK1                       0000A0  000016  0000B6        A0       1  BANK1       1
                strings                        000800  00001F  00081F      1000       0  STRING      2
                idataBANK0                     000D6A  000002  000D6C      1AD4       0  CODE        2
                text13                         000D6C  000009  000D75      1AD8       0  CODE        2
                text22                         000D75  00000A  000D7F      1AEA       0  CODE        2
                text21                         000D7F  00000C  000D8B      1AFE       0  CODE        2
                text5                          000D8B  00000F  000D9A      1B16       0  CODE        2
                text1                          000D9A  00000F  000DA9      1B34       0  CODE        2
                text12                         000DA9  000013  000DBC      1B52       0  CODE        2
                text14                         000DBC  000014  000DD0      1B78       0  CODE        2
                text4                          000DD0  000016  000DE6      1BA0       0  CODE        2
                text2                          000DE6  000018  000DFE      1BCC       0  CODE        2
                text10                         000DFE  000020  000E1E      1BFC       0  CODE        2
                text8                          000E1E  000020  000E3E      1C3C       0  CODE        2
                text17                         000E3E  000023  000E61      1C7C       0  CODE        2
                text24                         000E61  000032  000E93      1CC2       0  CODE        2
                text20                         000E93  00003E  000ED1      1D26       0  CODE        2
                text18                         000ED1  00003E  000F0F      1DA2       0  CODE        2
                text23                         000F0F  000045  000F54      1E1E       0  CODE        2
                text15                         000F54  000045  000F99      1EA8       0  CODE        2
                text7                          000F99  000067  001000      1F32       0  CODE        2
                config                         002007  000001  002008      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            006F-006F              1           1
        BANK1            00B6-00EF             3A           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         081F-0D69            54B
                         1000-1FFF            800
        CONST            0003-0003              1           2
                         081F-0D69            100
                         1000-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         081F-0D69            100
                         1000-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              006F-006F              1           1
                         00B6-00EF             3A
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         081F-0D69            54B
                         1000-1FFF           1000
        STRING           0003-0003              1           2
                         081F-0D69            100
                         1000-1FFF            100

                                  Symbol Table

?___aldiv                       cstackBANK0  0026
?___lwdiv                       cstackBANK0  0026
?___lwmod                       cstackCOMMON 0070
?___wmul                        cstackBANK0  0020
?_getSensorData                 cstackBANK0  0022
DriveDirect@VelocityLeft        cstackBANK0  0023
DriveDirect@VelocityRight       cstackBANK0  0021
DriveDirect@data                cstackBANK0  0026
DriveDirect@data_248            cstackBANK0  0028
_ADCMain                        text10       0DFE
_ADCON0                         (abs)        001F
_ADCON1                         (abs)        009F
_ADRESH                         (abs)        001E
_ADRESL                         (abs)        009E
_Distance                       bssBANK1     00A0
_DriveDirect                    text9        0742
_FLAG_1000MS                    bitbssCOMMON 03E8
_GIE                            (abs)        005F
_GO                             (abs)        00FA
_LeftSpeedH                     bssBANK0     005D
_LeftSpeedL                     bssBANK0     005E
_OPTION_REG                     (abs)        0081
_PB6Counter                     bssBANK0     005F
_PB7Counter                     bssBANK0     0060
_PB8Counter                     bssBANK0     0061
_PEIE                           (abs)        005E
_PORTA                          (abs)        0005
_PORTC                          (abs)        0007
_PORTD                          (abs)        0008
_PORTE                          (abs)        0009
_RB0                            (abs)        0030
_RB1                            (abs)        0031
_RB2                            (abs)        0032
_RB4                            (abs)        0034
_RCIF                           (abs)        0065
_RCREG                          (abs)        001A
_RCSTA                          (abs)        0018
_RE0                            (abs)        0048
_RE1                            (abs)        0049
_RE2                            (abs)        004A
_RightSpeedH                    bssBANK0     0062
_RightSpeedL                    bssBANK0     0063
_SPBRG                          (abs)        0099
_SSPBUF                         (abs)        0013
_SSPCON                         (abs)        0014
_SSPIF                          (abs)        0063
_SSPSTAT                        (abs)        0094
_TMR0                           (abs)        0001
_TMR0IE                         (abs)        005D
_TMR0IF                         (abs)        005A
_TRISA                          (abs)        0085
_TRISB                          (abs)        0086
_TRISC                          (abs)        0087
_TRISD                          (abs)        0088
_TRISE                          (abs)        0089
_TRMT                           (abs)        04C1
_TXREG                          (abs)        0019
_TXSTA                          (abs)        0098
__CFG_BOREN$OFF                 (abs)        0000
__CFG_CP$OFF                    (abs)        0000
__CFG_CPD$OFF                   (abs)        0000
__CFG_FOSC$HS                   (abs)        0000
__CFG_LVP$OFF                   (abs)        0000
__CFG_PWRTE$OFF                 (abs)        0000
__CFG_WDTE$OFF                  (abs)        0000
__CFG_WRT$OFF                   (abs)        0000
__Habs1                         abs1         0000
__Hbank0                        bank0        0000
__Hbank1                        bank1        0000
__Hbank2                        bank2        0000
__Hbank3                        bank3        0000
__HbitbssCOMMON                 bitbssCOMMON 0000
__HbssBANK0                     bssBANK0     0000
__HbssBANK1                     bssBANK1     0000
__HbssCOMMON                    bssCOMMON    0000
__Hcinit                        cinit        0037
__Hclrtext                      clrtext      0000
__Hcode                         code         0000
__Hcommon                       common       0000
__Hconfig                       config       2008
__HcstackBANK0                  cstackBANK0  0000
__HcstackCOMMON                 cstackCOMMON 0000
__HdataBANK0                    dataBANK0    0000
__Heeprom_data                  eeprom_data  0000
__Hend_init                     end_init     0015
__Hfunctab                      functab      0000
__HidataBANK0                   idataBANK0   0000
__Hidloc                        idloc        0000
__Hinit                         init         0012
__Hintentry                     intentry     0012
__Hmaintext                     maintext     0000
__Hpowerup                      powerup      0000
__Hram                          ram          0000
__Hreset_vec                    reset_vec    0003
__Hsfr0                         sfr0         0000
__Hsfr1                         sfr1         0000
__Hsfr2                         sfr2         0000
__Hsfr3                         sfr3         0000
__Hspace_0                      (abs)        2008
__Hspace_1                      (abs)        03E9
__Hspace_2                      (abs)        0000
__Hspace_3                      (abs)        0000
__Hstack                        stack        0000
__Hstrings                      strings      0000
__Htext                         text         0000
__Labs1                         abs1         0000
__Lbank0                        bank0        0000
__Lbank1                        bank1        0000
__Lbank2                        bank2        0000
__Lbank3                        bank3        0000
__LbitbssCOMMON                 bitbssCOMMON 0000
__LbssBANK0                     bssBANK0     0000
__LbssBANK1                     bssBANK1     0000
__LbssCOMMON                    bssCOMMON    0000
__Lcinit                        cinit        0015
__Lclrtext                      clrtext      0000
__Lcode                         code         0000
__Lcommon                       common       0000
__Lconfig                       config       2007
__LcstackBANK0                  cstackBANK0  0000
__LcstackCOMMON                 cstackCOMMON 0000
__LdataBANK0                    dataBANK0    0000
__Leeprom_data                  eeprom_data  0000
__Lend_init                     end_init     0012
__Lfunctab                      functab      0000
__LidataBANK0                   idataBANK0   0000
__Lidloc                        idloc        0000
__Linit                         init         0012
__Lintentry                     intentry     0004
__Lmaintext                     maintext     0000
__Lpowerup                      powerup      0000
__Lram                          ram          0000
__Lreset_vec                    reset_vec    0000
__Lsfr0                         sfr0         0000
__Lsfr1                         sfr1         0000
__Lsfr2                         sfr2         0000
__Lsfr3                         sfr3         0000
__Lspace_0                      (abs)        0000
__Lspace_1                      (abs)        0000
__Lspace_2                      (abs)        0000
__Lspace_3                      (abs)        0000
__Lstack                        stack        0000
__Lstrings                      strings      0000
__Ltext                         text         0000
__S0                            (abs)        2008
__S1                            (abs)        00B6
__S2                            (abs)        0000
__S3                            (abs)        0000
___aldiv                        text19       06B3
___aldiv@counter                cstackBANK0  002F
___aldiv@dividend               cstackBANK0  002A
___aldiv@divisor                cstackBANK0  0026
___aldiv@quotient               cstackBANK0  0031
___aldiv@sign                   cstackBANK0  0030
___int_sp                       stack        0000
___latbits                      (abs)        0002
___lwdiv                        text18       0ED1
___lwdiv@counter                cstackBANK0  002D
___lwdiv@dividend               cstackBANK0  0028
___lwdiv@divisor                cstackBANK0  0026
___lwdiv@quotient               cstackBANK0  002B
___lwmod                        text24       0E61
___lwmod@counter                cstackCOMMON 0075
___lwmod@dividend               cstackCOMMON 0072
___lwmod@divisor                cstackCOMMON 0070
___sp                           stack        0000
___wmul                         text17       0E3E
___wmul@multiplicand            cstackBANK0  0022
___wmul@multiplier              cstackBANK0  0020
___wmul@product                 cstackBANK0  0024
__end_of_ADCMain                text10       0E1E
__end_of_DriveDirect            text9        07CF
__end_of___aldiv                text19       0742
__end_of___lwdiv                text18       0F0F
__end_of___lwmod                text24       0E93
__end_of___wmul                 text17       0E61
__end_of__initialization        cinit        0033
__end_of__stringtab             strings      0806
__end_of_adcConvertMM           text16       03C4
__end_of_getADC                 text15       0F99
__end_of_getSensorData          text20       0ED1
__end_of_initWallFollow         text6        06B3
__end_of_isr                    text23       0F54
__end_of_lcdSetCursor           text13       0D75
__end_of_lcdWriteControl        text14       0DD0
__end_of_lcdWriteData           text12       0DBC
__end_of_lcdWriteString         text8        0E3E
__end_of_lcdWriteToDigitBCD     text11       0622
__end_of_main                   maintext     058B
__end_of_moveCCW                text7        1000
__end_of_ser_getch              text22       0D7F
__end_of_ser_init               text5        0D9A
__end_of_ser_putch              text21       0D8B
__end_of_setupADC               text4        0DE6
__end_of_setupLCD               text3        07F8
__end_of_setupSPI               text2        0DFE
__end_of_spi_transfer           text1        0DA9
__initialization                cinit        0015
__pbitbssCOMMON                 bitbssCOMMON 03E8
__pbssBANK0                     bssBANK0     0057
__pbssBANK1                     bssBANK1     00A0
__pbssCOMMON                    bssCOMMON    007B
__pcstackBANK0                  cstackBANK0  0020
__pcstackCOMMON                 cstackCOMMON 0070
__pdataBANK0                    dataBANK0    006D
__pidataBANK0                   idataBANK0   0D6A
__pintentry                     intentry     0004
__pmaintext                     maintext     03C4
__pstrings                      strings      0800
__ptext1                        text1        0D9A
__ptext10                       text10       0DFE
__ptext11                       text11       058B
__ptext12                       text12       0DA9
__ptext13                       text13       0D6C
__ptext14                       text14       0DBC
__ptext15                       text15       0F54
__ptext16                       text16       0037
__ptext17                       text17       0E3E
__ptext18                       text18       0ED1
__ptext19                       text19       06B3
__ptext2                        text2        0DE6
__ptext20                       text20       0E93
__ptext21                       text21       0D7F
__ptext22                       text22       0D75
__ptext23                       text23       0F0F
__ptext24                       text24       0E61
__ptext3                        text3        07CF
__ptext4                        text4        0DD0
__ptext5                        text5        0D8B
__ptext6                        text6        0622
__ptext7                        text7        0F99
__ptext8                        text8        0E1E
__ptext9                        text9        0742
__size_of_ADCMain               (abs)        0000
__size_of_DriveDirect           (abs)        0000
__size_of___aldiv               (abs)        0000
__size_of___lwdiv               (abs)        0000
__size_of___lwmod               (abs)        0000
__size_of___wmul                (abs)        0000
__size_of_adcConvertMM          (abs)        0000
__size_of_getADC                (abs)        0000
__size_of_getSensorData         (abs)        0000
__size_of_initWallFollow        (abs)        0000
__size_of_isr                   (abs)        0000
__size_of_lcdSetCursor          (abs)        0000
__size_of_lcdWriteControl       (abs)        0000
__size_of_lcdWriteData          (abs)        0000
__size_of_lcdWriteString        (abs)        0000
__size_of_lcdWriteToDigitBCD    (abs)        0000
__size_of_main                  (abs)        0000
__size_of_moveCCW               (abs)        0000
__size_of_ser_getch             (abs)        0000
__size_of_ser_init              (abs)        0000
__size_of_ser_putch             (abs)        0000
__size_of_setupADC              (abs)        0000
__size_of_setupLCD              (abs)        0000
__size_of_setupSPI              (abs)        0000
__size_of_spi_transfer          (abs)        0000
__stringbase                    strings      0805
__stringtab                     strings      0800
_adcClosest                     dataBANK0    006D
_adcConvertMM                   text16       0037
_adcRAW                         bssBANK0     0057
_degrees                        bssBANK1     00A8
_distTrav                       bssBANK1     00AA
_getADC                         text15       0F54
_getSensorData                  text20       0E93
_highByte                       bssBANK0     006C
_initWallFollow                 text6        0622
_isr                            text23       0F0F
_lcdSetCursor                   text13       0D6C
_lcdWriteControl                text14       0DBC
_lcdWriteData                   text12       0DA9
_lcdWriteString                 text8        0E1E
_lcdWriteToDigitBCD             text11       058B
_loop                           bssBANK1     00AC
_lowByte                        bssBANK0     0067
_main                           maintext     03C4
_moveCCW                        text7        0F99
_ser_getch                      text22       0D75
_ser_init                       text5        0D8B
_ser_putch                      text21       0D7F
_setupADC                       text4        0DD0
_setupLCD                       text3        07CF
_setupSPI                       text2        0DE6
_spi_transfer                   text1        0D9A
_stepCountNeg                   bssBANK1     00B0
_stepState                      bssBANK0     0059
_time_count                     bssBANK1     00B2
_totalDistTrav                  bssBANK0     005B
adcConvertMM@adcRAW             cstackBANK0  0035
btemp                           (abs)        007E
clear_ram0                      clrtext      07F8
end_of_initialization           cinit        0033
getSensorData@bytes             cstackBANK0  0022
getSensorData@packetID          cstackBANK0  0028
getSensorData@sensor            cstackBANK0  0026
interrupt_function              intentry     0004
intlevel0                       functab      0000
intlevel1                       functab      0000
intlevel2                       functab      0000
intlevel3                       functab      0000
intlevel4                       functab      0000
intlevel5                       functab      0000
lcdSetCursor@address            cstackBANK0  0023
lcdWriteControl@databyte        cstackBANK0  0022
lcdWriteData@databyte           cstackBANK0  0022
lcdWriteString@s                cstackBANK0  0024
lcdWriteToDigitBCD@HunsDigit    cstackBANK0  0027
lcdWriteToDigitBCD@OnesDigit    cstackBANK0  002D
lcdWriteToDigitBCD@TenThouDigit cstackBANK0  002B
lcdWriteToDigitBCD@TensDigit    cstackBANK0  0025
lcdWriteToDigitBCD@ThouDigit    cstackBANK0  0029
lcdWriteToDigitBCD@data         cstackBANK0  0023
ltemp                           (abs)        007E
ltemp0                          (abs)        007E
ltemp1                          (abs)        0082
ltemp2                          (abs)        0086
ltemp3                          (abs)        0080
main@ADC_ADJUST                 cstackBANK0  004E
main@ADC_CURRENT                cstackBANK0  0044
main@ADC_SET                    cstackBANK0  0055
main@ADJUSTED_SPEED_L           cstackBANK0  0050
main@ADJUSTED_SPEED_R           cstackBANK0  0052
main@CURRENT_SPEED_L            cstackBANK0  0046
main@CURRENT_SPEED_R            cstackBANK0  0048
main@controlByte                cstackBANK0  0054
main@correctionFactor_L         cstackBANK0  004C
main@correctionFactor_R         cstackBANK0  004A
moveCCW@i                       cstackBANK0  0026
moveCCW@numberOfSteps           cstackBANK0  0020
moveCCW@stepsRemaining          cstackBANK0  0024
reset_vec                       reset_vec    0000
saved_w                         (abs)        007E
ser_getch@rxbyte                cstackBANK0  0021
ser_putch@c                     cstackBANK0  0020
spi_transfer@data               cstackBANK0  0022
spi_transfer@temp               cstackBANK0  0021
stackhi                         (abs)        0000
stacklo                         (abs)        0000
start                           init         0012
start_initialization            cinit        0015
ttemp                           (abs)        007E
ttemp0                          (abs)        007E
ttemp1                          (abs)        0081
ttemp2                          (abs)        0084
ttemp3                          (abs)        0087
ttemp4                          (abs)        007F
wtemp                           (abs)        007E
wtemp0                          (abs)        007E
wtemp1                          (abs)        0080
wtemp2                          (abs)        0082
wtemp3                          (abs)        0084
wtemp4                          (abs)        0086
wtemp5                          (abs)        0088
wtemp6                          (abs)        007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 93 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ADC_SET         2   53[BANK0 ] unsigned int 
  ADJUSTED_SPE    2   50[BANK0 ] unsigned int 
  ADJUSTED_SPE    2   48[BANK0 ] unsigned int 
  ADC_ADJUST      2   46[BANK0 ] unsigned int 
  correctionFa    2   44[BANK0 ] unsigned int 
  correctionFa    2   42[BANK0 ] unsigned int 
  CURRENT_SPEE    2   40[BANK0 ] unsigned int 
  CURRENT_SPEE    2   38[BANK0 ] unsigned int 
  ADC_CURRENT     2   36[BANK0 ] unsigned int 
  controlByte     1   52[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0      19       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0      22       0       0       0
Total ram usage:       22 bytes
 Hardware stack levels required when called:    6
 This function calls:
		_ADCMain
		_DriveDirect
		_getSensorData
		_initWallFollow
		_lcdSetCursor
		_lcdWriteToDigitBCD
		_ser_init
		_ser_putch
		_setupADC
		_setupLCD
		_setupSPI
		_spi_transfer
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _spi_transfer *****************
 Defined at:
		line 23 in file "SPI.c"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    2[BANK0 ] unsigned char 
  temp            1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _setupSPI *****************
 Defined at:
		line 4 in file "SPI.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _setupLCD *****************
 Defined at:
		line 86 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_lcdWriteControl
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _setupADC *****************
 Defined at:
		line 8 in file "ADC.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ser_init *****************
 Defined at:
		line 5 in file "ser.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _initWallFollow *****************
 Defined at:
		line 67 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_ADCMain
		_DriveDirect
		_lcdWriteString
		_moveCCW
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _moveCCW *****************
 Defined at:
		line 45 in file "motor.c"
 Parameters:    Size  Location     Type
  numberOfStep    2    0[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  i               2    6[BANK0 ] volatile unsigned int 
  stepsRemaini    2    4[BANK0 ] volatile unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       4       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_initWallFollow
 This function uses a non-reentrant model


 *************** function _lcdWriteString *****************
 Defined at:
		line 36 in file "LCD.c"
 Parameters:    Size  Location     Type
  s               1    wreg     PTR unsigned char 
		 -> STR_1(25), 
 Auto vars:     Size  Location     Type
  s               1    4[BANK0 ] PTR unsigned char 
		 -> STR_1(25), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_lcdWriteData
 This function is called by:
		_initWallFollow
 This function uses a non-reentrant model


 *************** function _DriveDirect *****************
 Defined at:
		line 54 in file "ser.c"
 Parameters:    Size  Location     Type
  VelocityRigh    2    1[BANK0 ] int 
  VelocityLeft    2    3[BANK0 ] int 
 Auto vars:     Size  Location     Type
  data            2    8[BANK0 ] unsigned int 
  data            2    6[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       4       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_ser_putch
 This function is called by:
		_initWallFollow
		_main
 This function uses a non-reentrant model


 *************** function _ADCMain *****************
 Defined at:
		line 19 in file "ADC.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_adcConvertMM
		_getADC
		_lcdSetCursor
		_lcdWriteToDigitBCD
 This function is called by:
		_initWallFollow
		_main
 This function uses a non-reentrant model


 *************** function _lcdWriteToDigitBCD *****************
 Defined at:
		line 42 in file "LCD.c"
 Parameters:    Size  Location     Type
  data            2    3[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  OnesDigit       2   13[BANK0 ] unsigned int 
  TenThouDigit    2   11[BANK0 ] unsigned int 
  ThouDigit       2    9[BANK0 ] unsigned int 
  HunsDigit       2    7[BANK0 ] unsigned int 
  TensDigit       2    5[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0      10       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0      12       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_lcdWriteData
 This function is called by:
		_main
		_ADCMain
 This function uses a non-reentrant model


 *************** function _lcdWriteData *****************
 Defined at:
		line 20 in file "LCD.c"
 Parameters:    Size  Location     Type
  databyte        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  databyte        1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_lcdWriteString
		_lcdWriteToDigitBCD
 This function uses a non-reentrant model


 *************** function _lcdSetCursor *****************
 Defined at:
		line 31 in file "LCD.c"
 Parameters:    Size  Location     Type
  address         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  address         1    3[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_lcdWriteControl
 This function is called by:
		_main
		_ADCMain
 This function uses a non-reentrant model


 *************** function _lcdWriteControl *****************
 Defined at:
		line 9 in file "LCD.c"
 Parameters:    Size  Location     Type
  databyte        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  databyte        1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_lcdSetCursor
		_setupLCD
 This function uses a non-reentrant model


 *************** function _getADC *****************
 Defined at:
		line 29 in file "ADC.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2  469[None  ] unsigned int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_ADCMain
 This function uses a non-reentrant model


 *************** function _adcConvertMM *****************
 Defined at:
		line 59 in file "ADC.c"
 Parameters:    Size  Location     Type
  adcRAW          2   21[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   21[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       8       0       0       0
      Totals:         0      10       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___aldiv
		___lwdiv
		___wmul
 This function is called by:
		_ADCMain
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    0[BANK0 ] unsigned int 
  multiplicand    2    2[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    4[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_adcConvertMM
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    6[BANK0 ] unsigned int 
  dividend        2    8[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2   11[BANK0 ] unsigned int 
  counter         1   13[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    6[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_adcConvertMM
 This function uses a non-reentrant model


 *************** function ___aldiv *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
 Parameters:    Size  Location     Type
  divisor         4    6[BANK0 ] long 
  dividend        4   10[BANK0 ] long 
 Auto vars:     Size  Location     Type
  quotient        4   17[BANK0 ] long 
  sign            1   16[BANK0 ] unsigned char 
  counter         1   15[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4    6[BANK0 ] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       8       0       0       0
      Locals:         0       6       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0      15       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_adcConvertMM
 This function uses a non-reentrant model


 *************** function _getSensorData *****************
 Defined at:
		line 85 in file "ser.c"
 Parameters:    Size  Location     Type
  packetID        1    wreg     unsigned char 
  bytes           1    2[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  packetID        1    8[BANK0 ] unsigned char 
  sensor          2    6[BANK0 ] int 
 Return value:  Size  Location     Type
                  2    2[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_ser_getch
		_ser_putch
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ser_putch *****************
 Defined at:
		line 30 in file "ser.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_DriveDirect
		_getSensorData
		_Drive
 This function uses a non-reentrant model


 *************** function _ser_getch *****************
 Defined at:
		line 35 in file "ser.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  rxbyte          1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_getSensorData
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 24 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          5       0       0       0       0
      Totals:         5       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___lwmod
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function ___lwmod *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
 Parameters:    Size  Location     Type
  divisor         2    0[COMMON] unsigned int 
  dividend        2    2[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  counter         1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_isr
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c
		___lwmod       		CODE           	0E61	0000	51

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c estimated size: 51

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c
		___wmul        		CODE           	0E3E	0000	36

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c estimated size: 36

ser.c
		_ser_init      		CODE           	0D8B	0000	16
		_ser_getch     		CODE           	0D75	0000	11
		_ser_putch     		CODE           	0D7F	0000	13
		_getSensorData 		CODE           	0E93	0000	63
		_DriveDirect   		CODE           	0742	0000	142

ser.c estimated size: 245

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c
		___lwdiv       		CODE           	0ED1	0000	63

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c estimated size: 63

motor.c
		_moveCCW       		CODE           	0F99	0000	104

motor.c estimated size: 104

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c
		___aldiv       		CODE           	06B3	0000	144

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c estimated size: 144

shared
		__stringtab    		STRING         	0800	0000	7
		__initialization		CODE           	0015	0000	31

shared estimated size: 38

ADC.c
		_ADCMain       		CODE           	0DFE	0000	33
		_adcConvertMM  		CODE           	0037	0000	910
		_getADC        		CODE           	0F54	0000	70
		_setupADC      		CODE           	0DD0	0000	23

ADC.c estimated size: 1036

SPI.c
		_spi_transfer  		CODE           	0D9A	0000	16
		_setupSPI      		CODE           	0DE6	0000	25

SPI.c estimated size: 41

main.c
		_main          		CODE           	03C4	0000	456
		_isr           		CODE           	0F0F	0000	70
		_initWallFollow		CODE           	0622	0000	146

main.c estimated size: 672

LCD.c
		_setupLCD      		CODE           	07CF	0000	42
		_lcdSetCursor  		CODE           	0D6C	0000	10
		_lcdWriteControl		CODE           	0DBC	0000	21
		_lcdWriteData  		CODE           	0DA9	0000	20
		_lcdWriteToDigitBCD		CODE           	058B	0000	152
		_lcdWriteString		CODE           	0E1E	0000	33

LCD.c estimated size: 278

