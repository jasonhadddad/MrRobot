Microchip MPLAB XC8 Compiler V1.38 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v1.38\dat\en_msgs.txt -cs \
  -h+dist/default/production\iRobot.X.production.sym \
  --cmf=dist/default/production\iRobot.X.production.cmf -z -Q16F877A \
  -oC:\Users\Brendan\AppData\Local\Temp\sct0.2 \
  -Mdist/default/production/iRobot.X.production.map -E1 -ver=XC8 \
  -ASTACK=0110h-016fh -pstack=STACK -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh \
  -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\Brendan\AppData\Local\Temp\sct0.obj \
  dist/default/production\iRobot.X.production.obj 

Object code version is 3.11

Machine type is 16F877A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Brendan\AppData\Local\Temp\sct0.obj
                end_init                             12       12        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        1     400E       0
dist/default/production\iRobot.X.production.obj
                cinit                                15       15        E        8       0
                intentry                              4        4        E        8       0
                text11                              140      140       32        8       0
                text10                              172      172       31        8       0
                text9                               1F8      1F8       13        8       0
                text8                                23       23       97        8       0
                text7                               235      235        9        8       0
                text6                               21A      21A        F        8       0
                text5                               229      229        C        8       0
                text4                               1E4      1E4       14        8       0
                text3                               1A3      1A3       29        8       0
                text2                               1CC      1CC       18        8       0
                text1                               20B      20B        F        8       0
                maintext                             BA       BA       86        8       0
                cstackBANK0                          20       20       18       20       1
                cstackCOMMON                         70       70        A       70       1
                bssBANK0                             38       38        5       20       1
                bssCOMMON                            7A       7A        2       70       1
                bitbssCOMMON                        3E0       7C        1       70       1     8

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             12       12        3         0
                cinit                                15       15        E         0
                intentry                              4        4        E         0
                reset_vec                             0        0        3         0
                text11                              140      140       32         0
                text10                              172      172       31         0
                text9                               1F8      1F8       13         0
                text8                                23       23       97         0
                text7                               235      235        9         0
                text6                               21A      21A        F         0
                text5                               229      229        C         0
                text4                               1E4      1E4       14         0
                text3                               1A3      1A3       29         0
                text2                               1CC      1CC       18         0
                text1                               20B      20B        F         0
                maintext                             BA       BA       86         0

        CLASS   STRCODE        

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        A         1
                bssCOMMON                            7A       7A        2         1
                bitbssCOMMON                        3E0       7C        1         1

        CLASS   BANK0          
                cstackBANK0                          20       20       18         1
                bssBANK0                             38       38        5         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  00023A  00023E         8       0  CODE        2
                cstackBANK0                    000020  00001D  00003D        20       1  BANK0       1
                cstackCOMMON                   000070  00000D  00007D        70       1  COMMON      1
                config                         002007  000001  002008      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            003D-006F             33           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         023E-1FFF            800
        COMMON           007D-007D              1           1
        CONST            0003-0003              1           2
                         023E-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         023E-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              003D-006F             33           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         023E-1FFF           1DC2
        STRING           0003-0003              1           2
                         023E-1FFF            100

                                  Symbol Table

?___lwmod                       cstackCOMMON 0070
_ADCON1                         (abs)        009F
_FLAG_1000MS                    bitbssCOMMON 03E0
_GIE                            (abs)        005F
_OPTION_REG                     (abs)        0081
_PEIE                           (abs)        005E
_PORTC                          (abs)        0007
_PORTD                          (abs)        0008
_PORTE                          (abs)        0009
_RB0                            (abs)        0030
_RC2                            (abs)        003A
_RCIF                           (abs)        0065
_RCREG                          (abs)        001A
_RCSTA                          (abs)        0018
_RE0                            (abs)        0048
_RE1                            (abs)        0049
_RE2                            (abs)        004A
_SPBRG                          (abs)        0099
_SSPBUF                         (abs)        0013
_SSPCON                         (abs)        0014
_SSPIF                          (abs)        0063
_SSPSTAT                        (abs)        0094
_TMR0                           (abs)        0001
_TMR0IE                         (abs)        005D
_TMR0IF                         (abs)        005A
_TRISB                          (abs)        0086
_TRISC                          (abs)        0087
_TRISD                          (abs)        0088
_TRISE                          (abs)        0089
_TRMT                           (abs)        04C1
_TXREG                          (abs)        0019
_TXSTA                          (abs)        0098
__CFG_BOREN$OFF                 (abs)        0000
__CFG_CP$OFF                    (abs)        0000
__CFG_CPD$OFF                   (abs)        0000
__CFG_FOSC$HS                   (abs)        0000
__CFG_LVP$OFF                   (abs)        0000
__CFG_PWRTE$OFF                 (abs)        0000
__CFG_WDTE$OFF                  (abs)        0000
__CFG_WRT$OFF                   (abs)        0000
__Habs1                         abs1         0000
__Hbank0                        bank0        0000
__Hbank1                        bank1        0000
__Hbank2                        bank2        0000
__Hbank3                        bank3        0000
__HbitbssCOMMON                 bitbssCOMMON 0000
__HbssBANK0                     bssBANK0     0000
__HbssCOMMON                    bssCOMMON    0000
__Hcinit                        cinit        0023
__Hclrtext                      clrtext      0000
__Hcode                         code         0000
__Hcommon                       common       0000
__Hconfig                       config       2008
__HcstackBANK0                  cstackBANK0  0000
__HcstackCOMMON                 cstackCOMMON 0000
__Heeprom_data                  eeprom_data  0000
__Hend_init                     end_init     0015
__Hfunctab                      functab      0000
__Hidloc                        idloc        0000
__Hinit                         init         0012
__Hintentry                     intentry     0012
__Hmaintext                     maintext     0000
__Hpowerup                      powerup      0000
__Hram                          ram          0000
__Hreset_vec                    reset_vec    0003
__Hsfr0                         sfr0         0000
__Hsfr1                         sfr1         0000
__Hsfr2                         sfr2         0000
__Hsfr3                         sfr3         0000
__Hspace_0                      (abs)        2008
__Hspace_1                      (abs)        03E1
__Hspace_2                      (abs)        0000
__Hspace_3                      (abs)        0000
__Hstack                        stack        0000
__Hstrings                      strings      0000
__Htext                         text         0000
__Labs1                         abs1         0000
__Lbank0                        bank0        0000
__Lbank1                        bank1        0000
__Lbank2                        bank2        0000
__Lbank3                        bank3        0000
__LbitbssCOMMON                 bitbssCOMMON 0000
__LbssBANK0                     bssBANK0     0000
__LbssCOMMON                    bssCOMMON    0000
__Lcinit                        cinit        0015
__Lclrtext                      clrtext      0000
__Lcode                         code         0000
__Lcommon                       common       0000
__Lconfig                       config       2007
__LcstackBANK0                  cstackBANK0  0000
__LcstackCOMMON                 cstackCOMMON 0000
__Leeprom_data                  eeprom_data  0000
__Lend_init                     end_init     0012
__Lfunctab                      functab      0000
__Lidloc                        idloc        0000
__Linit                         init         0012
__Lintentry                     intentry     0004
__Lmaintext                     maintext     0000
__Lpowerup                      powerup      0000
__Lram                          ram          0000
__Lreset_vec                    reset_vec    0000
__Lsfr0                         sfr0         0000
__Lsfr1                         sfr1         0000
__Lsfr2                         sfr2         0000
__Lsfr3                         sfr3         0000
__Lspace_0                      (abs)        0000
__Lspace_1                      (abs)        0000
__Lspace_2                      (abs)        0000
__Lspace_3                      (abs)        0000
__Lstack                        stack        0000
__Lstrings                      strings      0000
__Ltext                         text         0000
__S0                            (abs)        2008
__S1                            (abs)        007D
__S2                            (abs)        0000
__S3                            (abs)        0000
___int_sp                       stack        0000
___latbits                      (abs)        0002
___lwmod                        text11       0140
___lwmod@counter                cstackCOMMON 0075
___lwmod@dividend               cstackCOMMON 0072
___lwmod@divisor                cstackCOMMON 0070
___sp                           stack        0000
__end_of___lwmod                text11       0172
__end_of__initialization        cinit        001F
__end_of_isr                    text10       01A3
__end_of_lcdWriteControl        text4        01F8
__end_of_lcdWriteData           text9        020B
__end_of_lcdWriteToDigitBCD     text8        00BA
__end_of_main                   maintext     0140
__end_of_ser_getch              text7        023E
__end_of_ser_init               text6        0229
__end_of_ser_putch              text5        0235
__end_of_setupLCD               text3        01CC
__end_of_setupSPI               text2        01E4
__end_of_spi_transfer           text1        021A
__initialization                cinit        0015
__pbitbssCOMMON                 bitbssCOMMON 03E0
__pbssBANK0                     bssBANK0     0038
__pbssCOMMON                    bssCOMMON    007A
__pcstackBANK0                  cstackBANK0  0020
__pcstackCOMMON                 cstackCOMMON 0070
__pintentry                     intentry     0004
__pmaintext                     maintext     00BA
__ptext1                        text1        020B
__ptext10                       text10       0172
__ptext11                       text11       0140
__ptext2                        text2        01CC
__ptext3                        text3        01A3
__ptext4                        text4        01E4
__ptext5                        text5        0229
__ptext6                        text6        021A
__ptext7                        text7        0235
__ptext8                        text8        0023
__ptext9                        text9        01F8
__size_of___lwmod               (abs)        0000
__size_of_isr                   (abs)        0000
__size_of_lcdWriteControl       (abs)        0000
__size_of_lcdWriteData          (abs)        0000
__size_of_lcdWriteToDigitBCD    (abs)        0000
__size_of_main                  (abs)        0000
__size_of_ser_getch             (abs)        0000
__size_of_ser_init              (abs)        0000
__size_of_ser_putch             (abs)        0000
__size_of_setupLCD              (abs)        0000
__size_of_setupSPI              (abs)        0000
__size_of_spi_transfer          (abs)        0000
_degrees                        bssBANK0     0038
_isr                            text10       0172
_lcdWriteControl                text4        01E4
_lcdWriteData                   text9        01F8
_lcdWriteToDigitBCD             text8        0023
_main                           maintext     00BA
_rxbyte                         bssBANK0     003C
_ser_getch                      text7        0235
_ser_init                       text6        021A
_ser_putch                      text5        0229
_setupLCD                       text3        01A3
_setupSPI                       text2        01CC
_spi_transfer                   text1        020B
_stepCountNeg                   bssBANK0     003A
_time_count                     bssCOMMON    007A
btemp                           (abs)        007E
end_of_initialization           cinit        001F
interrupt_function              intentry     0004
intlevel0                       functab      0000
intlevel1                       functab      0000
intlevel2                       functab      0000
intlevel3                       functab      0000
intlevel4                       functab      0000
intlevel5                       functab      0000
lcdWriteControl@databyte        cstackBANK0  0022
lcdWriteData@databyte           cstackBANK0  0022
lcdWriteToDigitBCD@HunsDigit    cstackBANK0  0027
lcdWriteToDigitBCD@OnesDigit    cstackBANK0  002D
lcdWriteToDigitBCD@TenThouDigit cstackBANK0  002B
lcdWriteToDigitBCD@TensDigit    cstackBANK0  0025
lcdWriteToDigitBCD@ThouDigit    cstackBANK0  0029
lcdWriteToDigitBCD@data         cstackBANK0  0023
ltemp                           (abs)        007E
ltemp0                          (abs)        007E
ltemp1                          (abs)        0082
ltemp2                          (abs)        0086
ltemp3                          (abs)        0080
main@controlByte                cstackBANK0  0037
main@dist                       cstackBANK0  0035
main@highByte                   cstackBANK0  0031
main@lowByte                    cstackBANK0  0033
reset_vec                       reset_vec    0000
saved_w                         (abs)        007E
ser_getch@rxbyte                cstackBANK0  0021
ser_putch@c                     cstackBANK0  0020
spi_transfer@data               cstackBANK0  0022
spi_transfer@temp               cstackBANK0  0021
stackhi                         (abs)        0000
stacklo                         (abs)        0000
start                           init         0012
start_initialization            cinit        0015
ttemp                           (abs)        007E
ttemp0                          (abs)        007E
ttemp1                          (abs)        0081
ttemp2                          (abs)        0084
ttemp3                          (abs)        0087
ttemp4                          (abs)        007F
wtemp                           (abs)        007E
wtemp0                          (abs)        007E
wtemp1                          (abs)        0080
wtemp2                          (abs)        0082
wtemp3                          (abs)        0084
wtemp4                          (abs)        0086
wtemp5                          (abs)        0088
wtemp6                          (abs)        007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 36 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  dist            2   21[BANK0 ] int 
  lowByte         2   19[BANK0 ] int 
  highByte        2   17[BANK0 ] int 
  controlByte     1   23[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       7       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_lcdWriteToDigitBCD
		_ser_getch
		_ser_init
		_ser_putch
		_setupLCD
		_setupSPI
		_spi_transfer
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _spi_transfer *****************
 Defined at:
		line 23 in file "SPI.c"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    2[BANK0 ] unsigned char 
  temp            1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _setupSPI *****************
 Defined at:
		line 4 in file "SPI.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _setupLCD *****************
 Defined at:
		line 86 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_lcdWriteControl
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _lcdWriteControl *****************
 Defined at:
		line 9 in file "LCD.c"
 Parameters:    Size  Location     Type
  databyte        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  databyte        1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_setupLCD
		_lcdSetCursor
 This function uses a non-reentrant model


 *************** function _ser_putch *****************
 Defined at:
		line 28 in file "ser.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ser_init *****************
 Defined at:
		line 4 in file "ser.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ser_getch *****************
 Defined at:
		line 33 in file "ser.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  rxbyte          1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _lcdWriteToDigitBCD *****************
 Defined at:
		line 42 in file "LCD.c"
 Parameters:    Size  Location     Type
  data            2    3[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  OnesDigit       2   13[BANK0 ] unsigned int 
  TenThouDigit    2   11[BANK0 ] unsigned int 
  ThouDigit       2    9[BANK0 ] unsigned int 
  HunsDigit       2    7[BANK0 ] unsigned int 
  TensDigit       2    5[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0      10       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0      12       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_lcdWriteData
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _lcdWriteData *****************
 Defined at:
		line 20 in file "LCD.c"
 Parameters:    Size  Location     Type
  databyte        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  databyte        1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_lcdWriteToDigitBCD
		_lcdWriteString
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 12 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          4       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___lwmod
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function ___lwmod *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
 Parameters:    Size  Location     Type
  divisor         2    0[COMMON] unsigned int 
  dividend        2    2[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  counter         1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_isr
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c
		___lwmod       		CODE           	0140	0000	51

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c estimated size: 51

ser.c
		_ser_init      		CODE           	021A	0000	16
		_ser_getch     		CODE           	0235	0000	10
		_ser_putch     		CODE           	0229	0000	13

ser.c estimated size: 39

shared
		__initialization		CODE           	0015	0000	11

shared estimated size: 11

SPI.c
		_spi_transfer  		CODE           	020B	0000	16
		_setupSPI      		CODE           	01CC	0000	25

SPI.c estimated size: 41

main.c
		_main          		CODE           	00BA	0000	135
		_isr           		CODE           	0172	0000	50

main.c estimated size: 185

LCD.c
		_setupLCD      		CODE           	01A3	0000	42
		_lcdWriteControl		CODE           	01E4	0000	21
		_lcdWriteData  		CODE           	01F8	0000	20
		_lcdWriteToDigitBCD		CODE           	0023	0000	152

LCD.c estimated size: 235

