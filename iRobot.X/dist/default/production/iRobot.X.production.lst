

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Aug 30 20:26:37 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     	;# 
    25  0001                     	;# 
    26  0002                     	;# 
    27  0003                     	;# 
    28  0004                     	;# 
    29  0005                     	;# 
    30  0006                     	;# 
    31  0007                     	;# 
    32  0008                     	;# 
    33  0009                     	;# 
    34  000A                     	;# 
    35  000B                     	;# 
    36  000C                     	;# 
    37  000D                     	;# 
    38  000E                     	;# 
    39  000E                     	;# 
    40  000F                     	;# 
    41  0010                     	;# 
    42  0011                     	;# 
    43  0012                     	;# 
    44  0013                     	;# 
    45  0014                     	;# 
    46  0015                     	;# 
    47  0015                     	;# 
    48  0016                     	;# 
    49  0017                     	;# 
    50  0018                     	;# 
    51  0019                     	;# 
    52  001A                     	;# 
    53  001B                     	;# 
    54  001B                     	;# 
    55  001C                     	;# 
    56  001D                     	;# 
    57  001E                     	;# 
    58  001F                     	;# 
    59  0081                     	;# 
    60  0085                     	;# 
    61  0086                     	;# 
    62  0087                     	;# 
    63  0088                     	;# 
    64  0089                     	;# 
    65  008C                     	;# 
    66  008D                     	;# 
    67  008E                     	;# 
    68  0091                     	;# 
    69  0092                     	;# 
    70  0093                     	;# 
    71  0094                     	;# 
    72  0098                     	;# 
    73  0099                     	;# 
    74  009C                     	;# 
    75  009D                     	;# 
    76  009E                     	;# 
    77  009F                     	;# 
    78  010C                     	;# 
    79  010D                     	;# 
    80  010E                     	;# 
    81  010F                     	;# 
    82  018C                     	;# 
    83  018D                     	;# 
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  0086                     	;# 
   122  0087                     	;# 
   123  0088                     	;# 
   124  0089                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  0091                     	;# 
   129  0092                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  0091                     	;# 
   249  0092                     	;# 
   250  0093                     	;# 
   251  0094                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009C                     	;# 
   255  009D                     	;# 
   256  009E                     	;# 
   257  009F                     	;# 
   258  010C                     	;# 
   259  010D                     	;# 
   260  010E                     	;# 
   261  010F                     	;# 
   262  018C                     	;# 
   263  018D                     	;# 
   264  0000                     	;# 
   265  0001                     	;# 
   266  0002                     	;# 
   267  0003                     	;# 
   268  0004                     	;# 
   269  0005                     	;# 
   270  0006                     	;# 
   271  0007                     	;# 
   272  0008                     	;# 
   273  0009                     	;# 
   274  000A                     	;# 
   275  000B                     	;# 
   276  000C                     	;# 
   277  000D                     	;# 
   278  000E                     	;# 
   279  000E                     	;# 
   280  000F                     	;# 
   281  0010                     	;# 
   282  0011                     	;# 
   283  0012                     	;# 
   284  0013                     	;# 
   285  0014                     	;# 
   286  0015                     	;# 
   287  0015                     	;# 
   288  0016                     	;# 
   289  0017                     	;# 
   290  0018                     	;# 
   291  0019                     	;# 
   292  001A                     	;# 
   293  001B                     	;# 
   294  001B                     	;# 
   295  001C                     	;# 
   296  001D                     	;# 
   297  001E                     	;# 
   298  001F                     	;# 
   299  0081                     	;# 
   300  0085                     	;# 
   301  0086                     	;# 
   302  0087                     	;# 
   303  0088                     	;# 
   304  0089                     	;# 
   305  008C                     	;# 
   306  008D                     	;# 
   307  008E                     	;# 
   308  0091                     	;# 
   309  0092                     	;# 
   310  0093                     	;# 
   311  0094                     	;# 
   312  0098                     	;# 
   313  0099                     	;# 
   314  009C                     	;# 
   315  009D                     	;# 
   316  009E                     	;# 
   317  009F                     	;# 
   318  010C                     	;# 
   319  010D                     	;# 
   320  010E                     	;# 
   321  010F                     	;# 
   322  018C                     	;# 
   323  018D                     	;# 
   324  0000                     	;# 
   325  0001                     	;# 
   326  0002                     	;# 
   327  0003                     	;# 
   328  0004                     	;# 
   329  0005                     	;# 
   330  0006                     	;# 
   331  0007                     	;# 
   332  0008                     	;# 
   333  0009                     	;# 
   334  000A                     	;# 
   335  000B                     	;# 
   336  000C                     	;# 
   337  000D                     	;# 
   338  000E                     	;# 
   339  000E                     	;# 
   340  000F                     	;# 
   341  0010                     	;# 
   342  0011                     	;# 
   343  0012                     	;# 
   344  0013                     	;# 
   345  0014                     	;# 
   346  0015                     	;# 
   347  0015                     	;# 
   348  0016                     	;# 
   349  0017                     	;# 
   350  0018                     	;# 
   351  0019                     	;# 
   352  001A                     	;# 
   353  001B                     	;# 
   354  001B                     	;# 
   355  001C                     	;# 
   356  001D                     	;# 
   357  001E                     	;# 
   358  001F                     	;# 
   359  0081                     	;# 
   360  0085                     	;# 
   361  0086                     	;# 
   362  0087                     	;# 
   363  0088                     	;# 
   364  0089                     	;# 
   365  008C                     	;# 
   366  008D                     	;# 
   367  008E                     	;# 
   368  0091                     	;# 
   369  0092                     	;# 
   370  0093                     	;# 
   371  0094                     	;# 
   372  0098                     	;# 
   373  0099                     	;# 
   374  009C                     	;# 
   375  009D                     	;# 
   376  009E                     	;# 
   377  009F                     	;# 
   378  010C                     	;# 
   379  010D                     	;# 
   380  010E                     	;# 
   381  010F                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384  001F                     _ADCON0	set	31
   385  0005                     _PORTA	set	5
   386  0007                     _PORTC	set	7
   387  0008                     _PORTD	set	8
   388  0009                     _PORTE	set	9
   389  001A                     _RCREG	set	26
   390  0018                     _RCSTA	set	24
   391  0013                     _SSPBUF	set	19
   392  0014                     _SSPCON	set	20
   393  0001                     _TMR0	set	1
   394  0019                     _TXREG	set	25
   395  001E                     _ADRESH	set	30
   396  005F                     _GIE	set	95
   397  00FA                     _GO	set	250
   398  005E                     _PEIE	set	94
   399  0030                     _RB0	set	48
   400  003A                     _RC2	set	58
   401  0065                     _RCIF	set	101
   402  0048                     _RE0	set	72
   403  0049                     _RE1	set	73
   404  004A                     _RE2	set	74
   405  0063                     _SSPIF	set	99
   406  005D                     _TMR0IE	set	93
   407  005A                     _TMR0IF	set	90
   408  009F                     _ADCON1	set	159
   409  009E                     _ADRESL	set	158
   410  0081                     _OPTION_REG	set	129
   411  0099                     _SPBRG	set	153
   412  0094                     _SSPSTAT	set	148
   413  0085                     _TRISA	set	133
   414  0086                     _TRISB	set	134
   415  0087                     _TRISC	set	135
   416  0088                     _TRISD	set	136
   417  0089                     _TRISE	set	137
   418  0098                     _TXSTA	set	152
   419  04C1                     _TRMT	set	1217
   420                           
   421                           ; #config settings
   422  0000                     
   423                           	psect	cinit
   424  0015                     start_initialization:	
   425  0015                     __initialization:	
   426                           
   427                           ; Clear objects allocated to BITCOMMON
   428  0015  01FD               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   429                           
   430                           ; Clear objects allocated to COMMON
   431  0016  01FA               	clrf	__pbssCOMMON& (0+127)
   432  0017  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   433  0018  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   434                           
   435                           ; Clear objects allocated to BANK0
   436  0019  1283               	bcf	3,5	;RP0=0, select bank0
   437  001A  1303               	bcf	3,6	;RP1=0, select bank0
   438  001B  01B8               	clrf	__pbssBANK0& (0+127)
   439  001C  01B9               	clrf	(__pbssBANK0+1)& (0+127)
   440  001D  01BA               	clrf	(__pbssBANK0+2)& (0+127)
   441  001E  01BB               	clrf	(__pbssBANK0+3)& (0+127)
   442  001F  01BC               	clrf	(__pbssBANK0+4)& (0+127)
   443  0020  01BD               	clrf	(__pbssBANK0+5)& (0+127)
   444  0021  01BE               	clrf	(__pbssBANK0+6)& (0+127)
   445  0022  01BF               	clrf	(__pbssBANK0+7)& (0+127)
   446  0023  01C0               	clrf	(__pbssBANK0+8)& (0+127)
   447  0024  01C1               	clrf	(__pbssBANK0+9)& (0+127)
   448  0025  01C2               	clrf	(__pbssBANK0+10)& (0+127)
   449  0026                     end_of_initialization:	
   450                           ;End of C runtime variable initialization code
   451                           
   452  0026                     __end_of__initialization:	
   453  0026  0183               	clrf	3
   454  0027  120A  118A  28C1   	ljmp	_main	;jump to C main() function
   455                           
   456                           	psect	bitbssCOMMON
   457  03E8                     __pbitbssCOMMON:	
   458  03E8                     _FLAG_1000MS:	
   459  03E8                     	ds	1
   460                           
   461                           	psect	bssCOMMON
   462  007A                     __pbssCOMMON:	
   463  007A                     _currentStep:	
   464  007A                     	ds	1
   465  007B                     _negativeFlag:	
   466  007B                     	ds	1
   467  007C                     _stepCount:	
   468  007C                     	ds	1
   469                           
   470                           	psect	bssBANK0
   471  0038                     __pbssBANK0:	
   472  0038                     _Distance:	
   473  0038                     	ds	2
   474  003A                     _adcRAW:	
   475  003A                     	ds	2
   476  003C                     _degrees:	
   477  003C                     	ds	2
   478  003E                     _stepCountNeg:	
   479  003E                     	ds	2
   480  0040                     _time_count:	
   481  0040                     	ds	2
   482  0042                     _rxbyte:	
   483  0042                     	ds	1
   484                           
   485                           	psect	cstackCOMMON
   486  0070                     __pcstackCOMMON:	
   487  0070                     ?_setupSPI:	
   488  0070                     ?_ser_init:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ?_setupLCD:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ?_spi_transfer:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0070                     ?_ser_putch:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ?_ser_getch:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ?_isr:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_main:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_lcdWriteControl:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?_lcdWriteData:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?___lwmod:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ___lwmod@divisor:	
   519                           ; 2 bytes @ 0x0
   520                           
   521                           
   522                           ; 2 bytes @ 0x0
   523  0070                     	ds	2
   524  0072                     ___lwmod@dividend:	
   525                           
   526                           ; 2 bytes @ 0x2
   527  0072                     	ds	2
   528  0074                     ??___lwmod:	
   529                           
   530                           ; 1 bytes @ 0x4
   531  0074                     	ds	1
   532  0075                     ___lwmod@counter:	
   533                           
   534                           ; 1 bytes @ 0x5
   535  0075                     	ds	1
   536  0076                     ??_isr:	
   537                           
   538                           ; 1 bytes @ 0x6
   539  0076                     	ds	4
   540                           
   541                           	psect	cstackBANK0
   542  0020                     __pcstackBANK0:	
   543  0020                     ??_setupSPI:	
   544  0020                     ??_ser_init:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0020                     ??_spi_transfer:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0020                     ??_ser_putch:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0020                     ??_ser_getch:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0020                     ??_lcdWriteControl:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0020                     ??_lcdWriteData:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0020                     ser_putch@c:	
   563                           ; 1 bytes @ 0x0
   564                           
   565                           
   566                           ; 1 bytes @ 0x0
   567  0020                     	ds	1
   568  0021                     spi_transfer@temp:	
   569  0021                     ser_getch@rxbyte:	
   570                           ; 1 bytes @ 0x1
   571                           
   572                           
   573                           ; 1 bytes @ 0x1
   574  0021                     	ds	1
   575  0022                     lcdWriteControl@databyte:	
   576  0022                     lcdWriteData@databyte:	
   577                           ; 1 bytes @ 0x2
   578                           
   579  0022                     spi_transfer@data:	
   580                           ; 1 bytes @ 0x2
   581                           
   582                           
   583                           ; 1 bytes @ 0x2
   584  0022                     	ds	1
   585  0023                     ??_setupLCD:	
   586  0023                     ?_lcdWriteToDigitBCD:	
   587                           ; 1 bytes @ 0x3
   588                           
   589  0023                     lcdWriteToDigitBCD@data:	
   590                           ; 1 bytes @ 0x3
   591                           
   592                           
   593                           ; 2 bytes @ 0x3
   594  0023                     	ds	2
   595  0025                     ??_lcdWriteToDigitBCD:	
   596  0025                     lcdWriteToDigitBCD@TensDigit:	
   597                           ; 1 bytes @ 0x5
   598                           
   599                           
   600                           ; 2 bytes @ 0x5
   601  0025                     	ds	2
   602  0027                     lcdWriteToDigitBCD@HunsDigit:	
   603                           
   604                           ; 2 bytes @ 0x7
   605  0027                     	ds	2
   606  0029                     lcdWriteToDigitBCD@ThouDigit:	
   607                           
   608                           ; 2 bytes @ 0x9
   609  0029                     	ds	2
   610  002B                     lcdWriteToDigitBCD@TenThouDigit:	
   611                           
   612                           ; 2 bytes @ 0xB
   613  002B                     	ds	2
   614  002D                     lcdWriteToDigitBCD@OnesDigit:	
   615                           
   616                           ; 2 bytes @ 0xD
   617  002D                     	ds	2
   618  002F                     ??_main:	
   619                           
   620                           ; 1 bytes @ 0xF
   621  002F                     	ds	2
   622  0031                     main@highByte:	
   623                           
   624                           ; 2 bytes @ 0x11
   625  0031                     	ds	2
   626  0033                     main@lowByte:	
   627                           
   628                           ; 2 bytes @ 0x13
   629  0033                     	ds	2
   630  0035                     main@dist:	
   631                           
   632                           ; 2 bytes @ 0x15
   633  0035                     	ds	2
   634  0037                     main@controlByte:	
   635                           
   636                           ; 1 bytes @ 0x17
   637  0037                     	ds	1
   638                           
   639                           	psect	maintext
   640  00C1                     __pmaintext:	
   641 ;;
   642 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   643 ;;
   644 ;; *************** function _main *****************
   645 ;; Defined at:
   646 ;;		line 36 in file "main.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;		None
   649 ;; Auto vars:     Size  Location     Type
   650 ;;  dist            2   21[BANK0 ] int 
   651 ;;  lowByte         2   19[BANK0 ] int 
   652 ;;  highByte        2   17[BANK0 ] int 
   653 ;;  controlByte     1   23[BANK0 ] unsigned char 
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      void 
   656 ;; Registers used:
   657 ;;		wreg, status,2, status,0, pclath, cstack
   658 ;; Tracked objects:
   659 ;;		On entry : B00/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   663 ;;      Params:         0       0       0       0       0
   664 ;;      Locals:         0       7       0       0       0
   665 ;;      Temps:          0       2       0       0       0
   666 ;;      Totals:         0       9       0       0       0
   667 ;;Total ram usage:        9 bytes
   668 ;; Hardware stack levels required when called:    4
   669 ;; This function calls:
   670 ;;		_lcdWriteToDigitBCD
   671 ;;		_ser_getch
   672 ;;		_ser_init
   673 ;;		_ser_putch
   674 ;;		_setupLCD
   675 ;;		_setupSPI
   676 ;;		_spi_transfer
   677 ;; This function is called by:
   678 ;;		Startup code after reset
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           
   683                           ;psect for function _main
   684  00C1                     _main:	
   685                           
   686                           ;main.c: 37: signed int highByte = 0;
   687                           
   688                           ;incstack = 0
   689                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   690  00C1  1283               	bcf	3,5	;RP0=0, select bank0
   691  00C2  1303               	bcf	3,6	;RP1=0, select bank0
   692  00C3  01B1               	clrf	main@highByte
   693  00C4  01B2               	clrf	main@highByte+1
   694                           
   695                           ;main.c: 38: signed int lowByte = 0;
   696  00C5  01B3               	clrf	main@lowByte
   697  00C6  01B4               	clrf	main@lowByte+1
   698                           
   699                           ;main.c: 39: signed int dist = 0;
   700  00C7  01B5               	clrf	main@dist
   701  00C8  01B6               	clrf	main@dist+1
   702                           
   703                           ;main.c: 42: setupSPI();
   704  00C9  120A  118A  21D5  120A  118A  	fcall	_setupSPI
   705                           
   706                           ;main.c: 43: ser_init();
   707  00CE  120A  118A  2223  120A  118A  	fcall	_ser_init
   708                           
   709                           ;main.c: 44: setupLCD();
   710  00D3  120A  118A  21AC  120A  118A  	fcall	_setupLCD
   711                           
   712                           ;main.c: 45: unsigned char controlByte = 0b00001101;
   713  00D8  300D               	movlw	13
   714  00D9  1283               	bcf	3,5	;RP0=0, select bank0
   715  00DA  1303               	bcf	3,6	;RP1=0, select bank0
   716  00DB  00AF               	movwf	??_main
   717  00DC  082F               	movf	??_main,w
   718  00DD  00B7               	movwf	main@controlByte
   719                           
   720                           ;main.c: 46: spi_transfer(controlByte);
   721  00DE  0837               	movf	main@controlByte,w
   722  00DF  120A  118A  2214  120A  118A  	fcall	_spi_transfer
   723                           
   724                           ;main.c: 48: ser_putch(128);
   725  00E4  3080               	movlw	128
   726  00E5  120A  118A  2232  120A  118A  	fcall	_ser_putch
   727                           
   728                           ;main.c: 49: ser_putch(132);
   729  00EA  3084               	movlw	132
   730  00EB  120A  118A  2232  120A  118A  	fcall	_ser_putch
   731                           
   732                           ;main.c: 51: ser_putch(136);
   733  00F0  3088               	movlw	136
   734  00F1  120A  118A  2232  120A  118A  	fcall	_ser_putch
   735                           
   736                           ;main.c: 52: ser_putch(4);
   737  00F6  3004               	movlw	4
   738  00F7  120A  118A  2232  120A  118A  	fcall	_ser_putch
   739                           
   740                           ;main.c: 54: ser_putch(142);
   741  00FC  308E               	movlw	142
   742  00FD  120A  118A  2232  120A  118A  	fcall	_ser_putch
   743                           
   744                           ;main.c: 55: ser_putch(19);
   745  0102  3013               	movlw	19
   746  0103  120A  118A  2232  120A  118A  	fcall	_ser_putch
   747                           
   748                           ;main.c: 57: ser_getch();
   749  0108  120A  118A  223E  120A  118A  	fcall	_ser_getch
   750                           
   751                           ;main.c: 58: highByte = rxbyte;
   752  010D  1283               	bcf	3,5	;RP0=0, select bank0
   753  010E  1303               	bcf	3,6	;RP1=0, select bank0
   754  010F  0842               	movf	_rxbyte,w
   755  0110  00AF               	movwf	??_main
   756  0111  01B0               	clrf	??_main+1
   757  0112  082F               	movf	??_main,w
   758  0113  00B1               	movwf	main@highByte
   759  0114  0830               	movf	??_main+1,w
   760  0115  00B2               	movwf	main@highByte+1
   761                           
   762                           ;main.c: 59: ser_getch();
   763  0116  120A  118A  223E  120A  118A  	fcall	_ser_getch
   764                           
   765                           ;main.c: 60: lowByte = rxbyte;
   766  011B  1283               	bcf	3,5	;RP0=0, select bank0
   767  011C  1303               	bcf	3,6	;RP1=0, select bank0
   768  011D  0842               	movf	_rxbyte,w
   769  011E  00AF               	movwf	??_main
   770  011F  01B0               	clrf	??_main+1
   771  0120  082F               	movf	??_main,w
   772  0121  00B3               	movwf	main@lowByte
   773  0122  0830               	movf	??_main+1,w
   774  0123  00B4               	movwf	main@lowByte+1
   775                           
   776                           ;main.c: 62: dist = (4*highByte + lowByte);
   777  0124  0832               	movf	main@highByte+1,w
   778  0125  00B0               	movwf	??_main+1
   779  0126  0831               	movf	main@highByte,w
   780  0127  00AF               	movwf	??_main
   781  0128  1003               	clrc
   782  0129  0DAF               	rlf	??_main,f
   783  012A  0DB0               	rlf	??_main+1,f
   784  012B  1003               	clrc
   785  012C  0DAF               	rlf	??_main,f
   786  012D  0DB0               	rlf	??_main+1,f
   787  012E  0833               	movf	main@lowByte,w
   788  012F  072F               	addwf	??_main,w
   789  0130  00B5               	movwf	main@dist
   790  0131  0834               	movf	main@lowByte+1,w
   791  0132  1803               	skipnc
   792  0133  0A34               	incf	main@lowByte+1,w
   793  0134  0730               	addwf	??_main+1,w
   794  0135  00B6               	movwf	main@dist+1
   795                           
   796                           ;main.c: 64: lcdWriteToDigitBCD(dist);
   797  0136  0836               	movf	main@dist+1,w
   798  0137  00A4               	movwf	lcdWriteToDigitBCD@data+1
   799  0138  0835               	movf	main@dist,w
   800  0139  00A3               	movwf	lcdWriteToDigitBCD@data
   801  013A  120A  118A  202A  120A  118A  	fcall	_lcdWriteToDigitBCD
   802  013F                     l1324:	
   803                           ;main.c: 67: while(1){
   804                           
   805                           
   806                           ;main.c: 68: if(FLAG_1000MS){
   807  013F  1C7D               	btfss	_FLAG_1000MS/(0+8),_FLAG_1000MS& (0+7)	;volatile
   808  0140  293F               	goto	l1324
   809                           
   810                           ;main.c: 69: RB0 = !RB0;
   811  0141  3001               	movlw	1
   812  0142  1283               	bcf	3,5	;RP0=0, select bank0
   813  0143  1303               	bcf	3,6	;RP1=0, select bank0
   814  0144  0686               	xorwf	6,f
   815                           
   816                           ;main.c: 70: FLAG_1000MS = 0;
   817  0145  107D               	bcf	_FLAG_1000MS/(0+8),_FLAG_1000MS& (0+7)	;volatile
   818  0146  293F               	goto	l1324
   819  0147                     __end_of_main:	
   820                           
   821                           	psect	text1
   822  0214                     __ptext1:	
   823 ;; *************** function _spi_transfer *****************
   824 ;; Defined at:
   825 ;;		line 23 in file "SPI.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;  data            1    wreg     unsigned char 
   828 ;; Auto vars:     Size  Location     Type
   829 ;;  data            1    2[BANK0 ] unsigned char 
   830 ;;  temp            1    1[BANK0 ] unsigned char 
   831 ;; Return value:  Size  Location     Type
   832 ;;                  1    wreg      unsigned char 
   833 ;; Registers used:
   834 ;;		wreg, status,2
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   840 ;;      Params:         0       0       0       0       0
   841 ;;      Locals:         0       2       0       0       0
   842 ;;      Temps:          0       1       0       0       0
   843 ;;      Totals:         0       3       0       0       0
   844 ;;Total ram usage:        3 bytes
   845 ;; Hardware stack levels used:    1
   846 ;; Hardware stack levels required when called:    2
   847 ;; This function calls:
   848 ;;		Nothing
   849 ;; This function is called by:
   850 ;;		_main
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           
   855                           ;psect for function _spi_transfer
   856  0214                     _spi_transfer:	
   857                           
   858                           ;incstack = 0
   859                           ; Regs used in _spi_transfer: [wreg+status,2]
   860                           ;spi_transfer@data stored from wreg
   861  0214  1283               	bcf	3,5	;RP0=0, select bank0
   862  0215  1303               	bcf	3,6	;RP1=0, select bank0
   863  0216  00A2               	movwf	spi_transfer@data
   864                           
   865                           ;SPI.c: 24: unsigned char temp = 0;
   866  0217  01A1               	clrf	spi_transfer@temp
   867                           
   868                           ;SPI.c: 26: SSPIF = 0;
   869  0218  118C               	bcf	12,3	;volatile
   870                           
   871                           ;SPI.c: 27: SSPBUF = data;
   872  0219  0822               	movf	spi_transfer@data,w
   873  021A  0093               	movwf	19	;volatile
   874  021B                     l168:	
   875                           ;SPI.c: 29: while (SSPIF == 0);
   876                           
   877  021B  1D8C               	btfss	12,3	;volatile
   878  021C  2A1B               	goto	l168
   879                           
   880                           ;SPI.c: 30: temp = SSPBUF;
   881  021D  0813               	movf	19,w	;volatile
   882  021E  00A0               	movwf	??_spi_transfer
   883  021F  0820               	movf	??_spi_transfer,w
   884  0220  00A1               	movwf	spi_transfer@temp
   885                           
   886                           ;SPI.c: 31: SSPIF = 0;
   887  0221  118C               	bcf	12,3	;volatile
   888  0222  0008               	return
   889  0223                     __end_of_spi_transfer:	
   890                           ;SPI.c: 33: return temp;
   891                           ;	Return value of _spi_transfer is never used
   892                           
   893                           
   894                           	psect	text2
   895  01D5                     __ptext2:	
   896 ;; *************** function _setupSPI *****************
   897 ;; Defined at:
   898 ;;		line 4 in file "SPI.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;		None
   903 ;; Return value:  Size  Location     Type
   904 ;;                  1    wreg      void 
   905 ;; Registers used:
   906 ;;		wreg, status,2
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   912 ;;      Params:         0       0       0       0       0
   913 ;;      Locals:         0       0       0       0       0
   914 ;;      Temps:          0       0       0       0       0
   915 ;;      Totals:         0       0       0       0       0
   916 ;;Total ram usage:        0 bytes
   917 ;; Hardware stack levels used:    1
   918 ;; Hardware stack levels required when called:    2
   919 ;; This function calls:
   920 ;;		Nothing
   921 ;; This function is called by:
   922 ;;		_main
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           
   927                           ;psect for function _setupSPI
   928  01D5                     _setupSPI:	
   929                           
   930                           ;SPI.c: 6: TRISB = 0b00000000;
   931                           
   932                           ;incstack = 0
   933                           ; Regs used in _setupSPI: [wreg+status,2]
   934  01D5  1683               	bsf	3,5	;RP0=1, select bank1
   935  01D6  1303               	bcf	3,6	;RP1=0, select bank1
   936  01D7  0186               	clrf	6	;volatile
   937                           
   938                           ;SPI.c: 8: SSPSTAT = 0b01000000;
   939  01D8  3040               	movlw	64
   940  01D9  0094               	movwf	20	;volatile
   941                           
   942                           ;SPI.c: 9: SSPCON = 0b00100000;
   943  01DA  3020               	movlw	32
   944  01DB  1283               	bcf	3,5	;RP0=0, select bank0
   945  01DC  1303               	bcf	3,6	;RP1=0, select bank0
   946  01DD  0094               	movwf	20	;volatile
   947                           
   948                           ;SPI.c: 10: TRISC = 0b11010000;
   949  01DE  30D0               	movlw	208
   950  01DF  1683               	bsf	3,5	;RP0=1, select bank1
   951  01E0  1303               	bcf	3,6	;RP1=0, select bank1
   952  01E1  0087               	movwf	7	;volatile
   953                           
   954                           ;SPI.c: 11: PORTC = 0b00000011;
   955  01E2  3003               	movlw	3
   956  01E3  1283               	bcf	3,5	;RP0=0, select bank0
   957  01E4  1303               	bcf	3,6	;RP1=0, select bank0
   958  01E5  0087               	movwf	7	;volatile
   959                           
   960                           ;SPI.c: 14: OPTION_REG = 0b00000100;
   961  01E6  3004               	movlw	4
   962  01E7  1683               	bsf	3,5	;RP0=1, select bank1
   963  01E8  1303               	bcf	3,6	;RP1=0, select bank1
   964  01E9  0081               	movwf	1	;volatile
   965                           
   966                           ;SPI.c: 16: TMR0IE = 1;
   967  01EA  168B               	bsf	11,5	;volatile
   968                           
   969                           ;SPI.c: 19: (GIE = 1);
   970  01EB  178B               	bsf	11,7	;volatile
   971  01EC  0008               	return
   972  01ED                     __end_of_setupSPI:	
   973                           
   974                           	psect	text3
   975  01AC                     __ptext3:	
   976 ;; *************** function _setupLCD *****************
   977 ;; Defined at:
   978 ;;		line 86 in file "LCD.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;		None
   981 ;; Auto vars:     Size  Location     Type
   982 ;;		None
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg, status,2, status,0, pclath, cstack
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   992 ;;      Params:         0       0       0       0       0
   993 ;;      Locals:         0       0       0       0       0
   994 ;;      Temps:          0       0       0       0       0
   995 ;;      Totals:         0       0       0       0       0
   996 ;;Total ram usage:        0 bytes
   997 ;; Hardware stack levels used:    1
   998 ;; Hardware stack levels required when called:    3
   999 ;; This function calls:
  1000 ;;		_lcdWriteControl
  1001 ;; This function is called by:
  1002 ;;		_main
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           
  1007                           ;psect for function _setupLCD
  1008  01AC                     _setupLCD:	
  1009                           
  1010                           ;LCD.c: 88: ADCON1 = 0b00000010;
  1011                           
  1012                           ;incstack = 0
  1013                           ; Regs used in _setupLCD: [wreg+status,2+status,0+pclath+cstack]
  1014  01AC  3002               	movlw	2
  1015  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  1016  01AE  1303               	bcf	3,6	;RP1=0, select bank1
  1017  01AF  009F               	movwf	31	;volatile
  1018                           
  1019                           ;LCD.c: 90: PORTD = 0;
  1020  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1021  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1022  01B2  0188               	clrf	8	;volatile
  1023                           
  1024                           ;LCD.c: 91: PORTE = 0;
  1025  01B3  0189               	clrf	9	;volatile
  1026                           
  1027                           ;LCD.c: 93: TRISD = 0b00000000;
  1028  01B4  1683               	bsf	3,5	;RP0=1, select bank1
  1029  01B5  1303               	bcf	3,6	;RP1=0, select bank1
  1030  01B6  0188               	clrf	8	;volatile
  1031                           
  1032                           ;LCD.c: 94: TRISE = 0b00000000;
  1033  01B7  0189               	clrf	9	;volatile
  1034                           
  1035                           ;LCD.c: 97: lcdWriteControl(0b00000001);
  1036  01B8  3001               	movlw	1
  1037  01B9  120A  118A  21ED  120A  118A  	fcall	_lcdWriteControl
  1038                           
  1039                           ;LCD.c: 98: lcdWriteControl(0b00111000);
  1040  01BE  3038               	movlw	56
  1041  01BF  120A  118A  21ED  120A  118A  	fcall	_lcdWriteControl
  1042                           
  1043                           ;LCD.c: 99: lcdWriteControl(0b00001100);
  1044  01C4  300C               	movlw	12
  1045  01C5  120A  118A  21ED  120A  118A  	fcall	_lcdWriteControl
  1046                           
  1047                           ;LCD.c: 100: lcdWriteControl(0b00000110);
  1048  01CA  3006               	movlw	6
  1049  01CB  120A  118A  21ED  120A  118A  	fcall	_lcdWriteControl
  1050                           
  1051                           ;LCD.c: 101: lcdWriteControl(0b00000010);
  1052  01D0  3002               	movlw	2
  1053  01D1  120A  118A  21ED   	fcall	_lcdWriteControl
  1054  01D4  0008               	return
  1055  01D5                     __end_of_setupLCD:	
  1056                           
  1057                           	psect	text4
  1058  01ED                     __ptext4:	
  1059 ;; *************** function _lcdWriteControl *****************
  1060 ;; Defined at:
  1061 ;;		line 9 in file "LCD.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  databyte        1    wreg     unsigned char 
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;  databyte        1    2[BANK0 ] unsigned char 
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  1    wreg      void 
  1068 ;; Registers used:
  1069 ;;		wreg
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1075 ;;      Params:         0       0       0       0       0
  1076 ;;      Locals:         0       1       0       0       0
  1077 ;;      Temps:          0       2       0       0       0
  1078 ;;      Totals:         0       3       0       0       0
  1079 ;;Total ram usage:        3 bytes
  1080 ;; Hardware stack levels used:    1
  1081 ;; Hardware stack levels required when called:    2
  1082 ;; This function calls:
  1083 ;;		Nothing
  1084 ;; This function is called by:
  1085 ;;		_setupLCD
  1086 ;;		_lcdSetCursor
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090                           
  1091                           ;psect for function _lcdWriteControl
  1092  01ED                     _lcdWriteControl:	
  1093                           
  1094                           ;incstack = 0
  1095                           ; Regs used in _lcdWriteControl: [wreg]
  1096                           ;lcdWriteControl@databyte stored from wreg
  1097  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  1098  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  1099  01EF  00A2               	movwf	lcdWriteControl@databyte
  1100                           
  1101                           ;LCD.c: 10: RE2 = 0;
  1102  01F0  1109               	bcf	9,2	;volatile
  1103                           
  1104                           ;LCD.c: 11: RE1 = 0;
  1105  01F1  1089               	bcf	9,1	;volatile
  1106                           
  1107                           ;LCD.c: 12: RE0 = 0;
  1108  01F2  1009               	bcf	9,0	;volatile
  1109                           
  1110                           ;LCD.c: 13: PORTD = databyte;
  1111  01F3  0822               	movf	lcdWriteControl@databyte,w
  1112  01F4  0088               	movwf	8	;volatile
  1113                           
  1114                           ;LCD.c: 14: RE2 = 1;
  1115  01F5  1509               	bsf	9,2	;volatile
  1116                           
  1117                           ;LCD.c: 15: RE2 = 0;
  1118  01F6  1109               	bcf	9,2	;volatile
  1119                           
  1120                           ;LCD.c: 16: _delay((unsigned long)((2)*(20000000/4000.0)));
  1121  01F7  300D               	movlw	13
  1122  01F8  00A1               	movwf	??_lcdWriteControl+1
  1123  01F9  30FB               	movlw	251
  1124  01FA  00A0               	movwf	??_lcdWriteControl
  1125  01FB                     u437:	
  1126  01FB  0BA0               	decfsz	??_lcdWriteControl,f
  1127  01FC  29FB               	goto	u437
  1128  01FD  0BA1               	decfsz	??_lcdWriteControl+1,f
  1129  01FE  29FB               	goto	u437
  1130  01FF  2A00               	nop2
  1131  0200  0008               	return
  1132  0201                     __end_of_lcdWriteControl:	
  1133                           
  1134                           	psect	text5
  1135  0232                     __ptext5:	
  1136 ;; *************** function _ser_putch *****************
  1137 ;; Defined at:
  1138 ;;		line 28 in file "ser.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;  c               1    wreg     unsigned char 
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  c               1    0[BANK0 ] unsigned char 
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1    wreg      void 
  1145 ;; Registers used:
  1146 ;;		wreg
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1152 ;;      Params:         0       0       0       0       0
  1153 ;;      Locals:         0       1       0       0       0
  1154 ;;      Temps:          0       0       0       0       0
  1155 ;;      Totals:         0       1       0       0       0
  1156 ;;Total ram usage:        1 bytes
  1157 ;; Hardware stack levels used:    1
  1158 ;; Hardware stack levels required when called:    2
  1159 ;; This function calls:
  1160 ;;		Nothing
  1161 ;; This function is called by:
  1162 ;;		_main
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166                           
  1167                           ;psect for function _ser_putch
  1168  0232                     _ser_putch:	
  1169                           
  1170                           ;incstack = 0
  1171                           ; Regs used in _ser_putch: [wreg]
  1172                           ;ser_putch@c stored from wreg
  1173  0232  1283               	bcf	3,5	;RP0=0, select bank0
  1174  0233  1303               	bcf	3,6	;RP1=0, select bank0
  1175  0234  00A0               	movwf	ser_putch@c
  1176  0235                     l211:	
  1177                           ;ser.c: 29: while(!TRMT);
  1178                           
  1179  0235  1683               	bsf	3,5	;RP0=1, select bank1
  1180  0236  1303               	bcf	3,6	;RP1=0, select bank1
  1181  0237  1C98               	btfss	24,1	;volatile
  1182  0238  2A35               	goto	l211
  1183                           
  1184                           ;ser.c: 30: TXREG=c;
  1185  0239  1283               	bcf	3,5	;RP0=0, select bank0
  1186  023A  1303               	bcf	3,6	;RP1=0, select bank0
  1187  023B  0820               	movf	ser_putch@c,w
  1188  023C  0099               	movwf	25	;volatile
  1189  023D  0008               	return
  1190  023E                     __end_of_ser_putch:	
  1191                           
  1192                           	psect	text6
  1193  0223                     __ptext6:	
  1194 ;; *************** function _ser_init *****************
  1195 ;; Defined at:
  1196 ;;		line 4 in file "ser.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;		None
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;		None
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  1    wreg      void 
  1203 ;; Registers used:
  1204 ;;		wreg
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1210 ;;      Params:         0       0       0       0       0
  1211 ;;      Locals:         0       0       0       0       0
  1212 ;;      Temps:          0       0       0       0       0
  1213 ;;      Totals:         0       0       0       0       0
  1214 ;;Total ram usage:        0 bytes
  1215 ;; Hardware stack levels used:    1
  1216 ;; Hardware stack levels required when called:    2
  1217 ;; This function calls:
  1218 ;;		Nothing
  1219 ;; This function is called by:
  1220 ;;		_main
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           
  1225                           ;psect for function _ser_init
  1226  0223                     _ser_init:	
  1227                           
  1228                           ;ser.c: 6: TXSTA = 0b00100100;
  1229                           
  1230                           ;incstack = 0
  1231                           ; Regs used in _ser_init: [wreg]
  1232  0223  3024               	movlw	36
  1233  0224  1683               	bsf	3,5	;RP0=1, select bank1
  1234  0225  1303               	bcf	3,6	;RP1=0, select bank1
  1235  0226  0098               	movwf	24	;volatile
  1236                           
  1237                           ;ser.c: 7: RCSTA = 0b10011000;
  1238  0227  3098               	movlw	152
  1239  0228  1283               	bcf	3,5	;RP0=0, select bank0
  1240  0229  1303               	bcf	3,6	;RP1=0, select bank0
  1241  022A  0098               	movwf	24	;volatile
  1242                           
  1243                           ;ser.c: 22: SPBRG = 20;
  1244  022B  3014               	movlw	20
  1245  022C  1683               	bsf	3,5	;RP0=1, select bank1
  1246  022D  1303               	bcf	3,6	;RP1=0, select bank1
  1247  022E  0099               	movwf	25	;volatile
  1248                           
  1249                           ;ser.c: 24: PEIE = 1;
  1250  022F  170B               	bsf	11,6	;volatile
  1251                           
  1252                           ;ser.c: 25: (GIE = 1);
  1253  0230  178B               	bsf	11,7	;volatile
  1254  0231  0008               	return
  1255  0232                     __end_of_ser_init:	
  1256                           
  1257                           	psect	text7
  1258  023E                     __ptext7:	
  1259 ;; *************** function _ser_getch *****************
  1260 ;; Defined at:
  1261 ;;		line 33 in file "ser.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;		None
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  rxbyte          1    1[BANK0 ] unsigned char 
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  1    wreg      unsigned char 
  1268 ;; Registers used:
  1269 ;;		wreg
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1275 ;;      Params:         0       0       0       0       0
  1276 ;;      Locals:         0       1       0       0       0
  1277 ;;      Temps:          0       1       0       0       0
  1278 ;;      Totals:         0       2       0       0       0
  1279 ;;Total ram usage:        2 bytes
  1280 ;; Hardware stack levels used:    1
  1281 ;; Hardware stack levels required when called:    2
  1282 ;; This function calls:
  1283 ;;		Nothing
  1284 ;; This function is called by:
  1285 ;;		_main
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           
  1290                           ;psect for function _ser_getch
  1291  023E                     _ser_getch:	
  1292  023E                     l217:	
  1293                           ;ser.c: 34: while(!RCIF);
  1294                           
  1295                           ;incstack = 0
  1296                           ; Regs used in _ser_getch: [wreg]
  1297                           
  1298  023E  1283               	bcf	3,5	;RP0=0, select bank0
  1299  023F  1303               	bcf	3,6	;RP1=0, select bank0
  1300  0240  1E8C               	btfss	12,5	;volatile
  1301  0241  2A3E               	goto	l217
  1302                           
  1303                           ;ser.c: 35: unsigned char rxbyte = RCREG;
  1304  0242  081A               	movf	26,w	;volatile
  1305  0243  00A0               	movwf	??_ser_getch
  1306  0244  0820               	movf	??_ser_getch,w
  1307  0245  00A1               	movwf	ser_getch@rxbyte
  1308  0246  0008               	return
  1309  0247                     __end_of_ser_getch:	
  1310                           ;ser.c: 36: return rxbyte;
  1311                           ;	Return value of _ser_getch is never used
  1312                           
  1313                           
  1314                           	psect	text8
  1315  002A                     __ptext8:	
  1316 ;; *************** function _lcdWriteToDigitBCD *****************
  1317 ;; Defined at:
  1318 ;;		line 42 in file "LCD.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;  data            2    3[BANK0 ] unsigned int 
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;  OnesDigit       2   13[BANK0 ] unsigned int 
  1323 ;;  TenThouDigit    2   11[BANK0 ] unsigned int 
  1324 ;;  ThouDigit       2    9[BANK0 ] unsigned int 
  1325 ;;  HunsDigit       2    7[BANK0 ] unsigned int 
  1326 ;;  TensDigit       2    5[BANK0 ] unsigned int 
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      void 
  1329 ;; Registers used:
  1330 ;;		wreg, status,2, status,0, pclath, cstack
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1336 ;;      Params:         0       2       0       0       0
  1337 ;;      Locals:         0      10       0       0       0
  1338 ;;      Temps:          0       0       0       0       0
  1339 ;;      Totals:         0      12       0       0       0
  1340 ;;Total ram usage:       12 bytes
  1341 ;; Hardware stack levels used:    1
  1342 ;; Hardware stack levels required when called:    3
  1343 ;; This function calls:
  1344 ;;		_lcdWriteData
  1345 ;; This function is called by:
  1346 ;;		_main
  1347 ;;		_ADCMain
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           
  1352                           ;psect for function _lcdWriteToDigitBCD
  1353  002A                     _lcdWriteToDigitBCD:	
  1354                           
  1355                           ;LCD.c: 43: unsigned int OnesDigit, TensDigit, HunsDigit, ThouDigit, TenThouDigit;
  1356                           ;LCD.c: 46: OnesDigit = data;
  1357                           
  1358                           ;incstack = 0
  1359                           ; Regs used in _lcdWriteToDigitBCD: [wreg+status,2+status,0+pclath+cstack]
  1360  002A  1283               	bcf	3,5	;RP0=0, select bank0
  1361  002B  1303               	bcf	3,6	;RP1=0, select bank0
  1362  002C  0824               	movf	lcdWriteToDigitBCD@data+1,w
  1363  002D  00AE               	movwf	lcdWriteToDigitBCD@OnesDigit+1
  1364  002E  0823               	movf	lcdWriteToDigitBCD@data,w
  1365  002F  00AD               	movwf	lcdWriteToDigitBCD@OnesDigit
  1366                           
  1367                           ;LCD.c: 47: TensDigit = 0;
  1368  0030  01A5               	clrf	lcdWriteToDigitBCD@TensDigit
  1369  0031  01A6               	clrf	lcdWriteToDigitBCD@TensDigit+1
  1370                           
  1371                           ;LCD.c: 48: HunsDigit = 0;
  1372  0032  01A7               	clrf	lcdWriteToDigitBCD@HunsDigit
  1373  0033  01A8               	clrf	lcdWriteToDigitBCD@HunsDigit+1
  1374                           
  1375                           ;LCD.c: 49: ThouDigit = 0;
  1376  0034  01A9               	clrf	lcdWriteToDigitBCD@ThouDigit
  1377  0035  01AA               	clrf	lcdWriteToDigitBCD@ThouDigit+1
  1378                           
  1379                           ;LCD.c: 50: TenThouDigit = 0;
  1380  0036  01AB               	clrf	lcdWriteToDigitBCD@TenThouDigit
  1381  0037  01AC               	clrf	lcdWriteToDigitBCD@TenThouDigit+1
  1382  0038                     l1216:	
  1383                           ;LCD.c: 53: while (OnesDigit >= 10000){
  1384                           
  1385  0038  3027               	movlw	39
  1386  0039  022E               	subwf	lcdWriteToDigitBCD@OnesDigit+1,w
  1387  003A  3010               	movlw	16
  1388  003B  1903               	skipnz
  1389  003C  022D               	subwf	lcdWriteToDigitBCD@OnesDigit,w
  1390  003D  1C03               	btfss	3,0
  1391  003E  285C               	goto	l1222
  1392                           
  1393                           ;LCD.c: 54: OnesDigit = OnesDigit - 10000;
  1394  003F  082D               	movf	lcdWriteToDigitBCD@OnesDigit,w
  1395  0040  3EF0               	addlw	240
  1396  0041  00AD               	movwf	lcdWriteToDigitBCD@OnesDigit
  1397  0042  082E               	movf	lcdWriteToDigitBCD@OnesDigit+1,w
  1398  0043  1803               	skipnc
  1399  0044  3E01               	addlw	1
  1400  0045  3ED8               	addlw	216
  1401  0046  00AE               	movwf	lcdWriteToDigitBCD@OnesDigit+1
  1402                           
  1403                           ;LCD.c: 55: TenThouDigit++;
  1404  0047  3001               	movlw	1
  1405  0048  07AB               	addwf	lcdWriteToDigitBCD@TenThouDigit,f
  1406  0049  1803               	skipnc
  1407  004A  0AAC               	incf	lcdWriteToDigitBCD@TenThouDigit+1,f
  1408  004B  3000               	movlw	0
  1409  004C  07AC               	addwf	lcdWriteToDigitBCD@TenThouDigit+1,f
  1410  004D  2838               	goto	l1216
  1411  004E                     l1218:	
  1412                           ;LCD.c: 56: }
  1413                           ;LCD.c: 58: while (OnesDigit >= 1000){
  1414                           
  1415                           
  1416                           ;LCD.c: 59: OnesDigit = OnesDigit - 1000;
  1417  004E  082D               	movf	lcdWriteToDigitBCD@OnesDigit,w
  1418  004F  3E18               	addlw	24
  1419  0050  00AD               	movwf	lcdWriteToDigitBCD@OnesDigit
  1420  0051  082E               	movf	lcdWriteToDigitBCD@OnesDigit+1,w
  1421  0052  1803               	skipnc
  1422  0053  3E01               	addlw	1
  1423  0054  3EFC               	addlw	252
  1424  0055  00AE               	movwf	lcdWriteToDigitBCD@OnesDigit+1
  1425                           
  1426                           ;LCD.c: 60: ThouDigit++;
  1427  0056  3001               	movlw	1
  1428  0057  07A9               	addwf	lcdWriteToDigitBCD@ThouDigit,f
  1429  0058  1803               	skipnc
  1430  0059  0AAA               	incf	lcdWriteToDigitBCD@ThouDigit+1,f
  1431  005A  3000               	movlw	0
  1432  005B  07AA               	addwf	lcdWriteToDigitBCD@ThouDigit+1,f
  1433  005C                     l1222:	
  1434  005C  3003               	movlw	3
  1435  005D  022E               	subwf	lcdWriteToDigitBCD@OnesDigit+1,w
  1436  005E  30E8               	movlw	232
  1437  005F  1903               	skipnz
  1438  0060  022D               	subwf	lcdWriteToDigitBCD@OnesDigit,w
  1439  0061  1C03               	btfss	3,0
  1440  0062  2872               	goto	l1228
  1441  0063  284E               	goto	l1218
  1442  0064                     l1224:	
  1443                           ;LCD.c: 61: }
  1444                           ;LCD.c: 63: while (OnesDigit >= 100){
  1445                           
  1446                           
  1447                           ;LCD.c: 64: OnesDigit = OnesDigit - 100;
  1448  0064  082D               	movf	lcdWriteToDigitBCD@OnesDigit,w
  1449  0065  3E9C               	addlw	156
  1450  0066  00AD               	movwf	lcdWriteToDigitBCD@OnesDigit
  1451  0067  082E               	movf	lcdWriteToDigitBCD@OnesDigit+1,w
  1452  0068  1803               	skipnc
  1453  0069  3E01               	addlw	1
  1454  006A  3EFF               	addlw	255
  1455  006B  00AE               	movwf	lcdWriteToDigitBCD@OnesDigit+1
  1456                           
  1457                           ;LCD.c: 65: HunsDigit++;
  1458  006C  3001               	movlw	1
  1459  006D  07A7               	addwf	lcdWriteToDigitBCD@HunsDigit,f
  1460  006E  1803               	skipnc
  1461  006F  0AA8               	incf	lcdWriteToDigitBCD@HunsDigit+1,f
  1462  0070  3000               	movlw	0
  1463  0071  07A8               	addwf	lcdWriteToDigitBCD@HunsDigit+1,f
  1464  0072                     l1228:	
  1465  0072  3000               	movlw	0
  1466  0073  022E               	subwf	lcdWriteToDigitBCD@OnesDigit+1,w
  1467  0074  3064               	movlw	100
  1468  0075  1903               	skipnz
  1469  0076  022D               	subwf	lcdWriteToDigitBCD@OnesDigit,w
  1470  0077  1C03               	btfss	3,0
  1471  0078  2888               	goto	l1234
  1472  0079  2864               	goto	l1224
  1473  007A                     l1230:	
  1474                           ;LCD.c: 66: }
  1475                           ;LCD.c: 68: while (OnesDigit >= 10){
  1476                           
  1477                           
  1478                           ;LCD.c: 69: OnesDigit = OnesDigit - 10;
  1479  007A  082D               	movf	lcdWriteToDigitBCD@OnesDigit,w
  1480  007B  3EF6               	addlw	246
  1481  007C  00AD               	movwf	lcdWriteToDigitBCD@OnesDigit
  1482  007D  082E               	movf	lcdWriteToDigitBCD@OnesDigit+1,w
  1483  007E  1803               	skipnc
  1484  007F  3E01               	addlw	1
  1485  0080  3EFF               	addlw	255
  1486  0081  00AE               	movwf	lcdWriteToDigitBCD@OnesDigit+1
  1487                           
  1488                           ;LCD.c: 70: TensDigit++;
  1489  0082  3001               	movlw	1
  1490  0083  07A5               	addwf	lcdWriteToDigitBCD@TensDigit,f
  1491  0084  1803               	skipnc
  1492  0085  0AA6               	incf	lcdWriteToDigitBCD@TensDigit+1,f
  1493  0086  3000               	movlw	0
  1494  0087  07A6               	addwf	lcdWriteToDigitBCD@TensDigit+1,f
  1495  0088                     l1234:	
  1496  0088  3000               	movlw	0
  1497  0089  022E               	subwf	lcdWriteToDigitBCD@OnesDigit+1,w
  1498  008A  300A               	movlw	10
  1499  008B  1903               	skipnz
  1500  008C  022D               	subwf	lcdWriteToDigitBCD@OnesDigit,w
  1501  008D  1803               	skipnc
  1502  008E  287A               	goto	l1230
  1503                           
  1504                           ;LCD.c: 71: }
  1505                           ;LCD.c: 73: if (TenThouDigit > 0)
  1506  008F  082B               	movf	lcdWriteToDigitBCD@TenThouDigit,w
  1507  0090  042C               	iorwf	lcdWriteToDigitBCD@TenThouDigit+1,w
  1508  0091  1903               	btfsc	3,2
  1509  0092  289A               	goto	l1240
  1510                           
  1511                           ;LCD.c: 74: lcdWriteData((unsigned int)TenThouDigit + 48);
  1512  0093  082B               	movf	lcdWriteToDigitBCD@TenThouDigit,w
  1513  0094  3E30               	addlw	48
  1514  0095  120A  118A  2201  120A  118A  	fcall	_lcdWriteData
  1515  009A                     l1240:	
  1516                           
  1517                           ;LCD.c: 76: if (ThouDigit > 0)
  1518  009A  1283               	bcf	3,5	;RP0=0, select bank0
  1519  009B  1303               	bcf	3,6	;RP1=0, select bank0
  1520  009C  0829               	movf	lcdWriteToDigitBCD@ThouDigit,w
  1521  009D  042A               	iorwf	lcdWriteToDigitBCD@ThouDigit+1,w
  1522  009E  1903               	btfsc	3,2
  1523  009F  28A7               	goto	l122
  1524                           
  1525                           ;LCD.c: 77: lcdWriteData((unsigned int)ThouDigit + 48);
  1526  00A0  0829               	movf	lcdWriteToDigitBCD@ThouDigit,w
  1527  00A1  3E30               	addlw	48
  1528  00A2  120A  118A  2201  120A  118A  	fcall	_lcdWriteData
  1529  00A7                     l122:	
  1530                           
  1531                           ;LCD.c: 79: lcdWriteData((unsigned int)HunsDigit + 48);
  1532  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1533  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1534  00A9  0827               	movf	lcdWriteToDigitBCD@HunsDigit,w
  1535  00AA  3E30               	addlw	48
  1536  00AB  120A  118A  2201  120A  118A  	fcall	_lcdWriteData
  1537                           
  1538                           ;LCD.c: 80: lcdWriteData((unsigned int)TensDigit + 48);
  1539  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  1540  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  1541  00B2  0825               	movf	lcdWriteToDigitBCD@TensDigit,w
  1542  00B3  3E30               	addlw	48
  1543  00B4  120A  118A  2201  120A  118A  	fcall	_lcdWriteData
  1544                           
  1545                           ;LCD.c: 81: lcdWriteData((unsigned int)OnesDigit + 48);
  1546  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1547  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  1548  00BB  082D               	movf	lcdWriteToDigitBCD@OnesDigit,w
  1549  00BC  3E30               	addlw	48
  1550  00BD  120A  118A  2201   	fcall	_lcdWriteData
  1551  00C0  0008               	return
  1552  00C1                     __end_of_lcdWriteToDigitBCD:	
  1553                           
  1554                           	psect	text9
  1555  0201                     __ptext9:	
  1556 ;; *************** function _lcdWriteData *****************
  1557 ;; Defined at:
  1558 ;;		line 20 in file "LCD.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;  databyte        1    wreg     unsigned char 
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;  databyte        1    2[BANK0 ] unsigned char 
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  1    wreg      void 
  1565 ;; Registers used:
  1566 ;;		wreg
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1572 ;;      Params:         0       0       0       0       0
  1573 ;;      Locals:         0       1       0       0       0
  1574 ;;      Temps:          0       2       0       0       0
  1575 ;;      Totals:         0       3       0       0       0
  1576 ;;Total ram usage:        3 bytes
  1577 ;; Hardware stack levels used:    1
  1578 ;; Hardware stack levels required when called:    2
  1579 ;; This function calls:
  1580 ;;		Nothing
  1581 ;; This function is called by:
  1582 ;;		_lcdWriteToDigitBCD
  1583 ;;		_lcdWriteString
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           
  1588                           ;psect for function _lcdWriteData
  1589  0201                     _lcdWriteData:	
  1590                           
  1591                           ;incstack = 0
  1592                           ; Regs used in _lcdWriteData: [wreg]
  1593                           ;lcdWriteData@databyte stored from wreg
  1594  0201  1283               	bcf	3,5	;RP0=0, select bank0
  1595  0202  1303               	bcf	3,6	;RP1=0, select bank0
  1596  0203  00A2               	movwf	lcdWriteData@databyte
  1597                           
  1598                           ;LCD.c: 21: RE2 = 0;
  1599  0204  1109               	bcf	9,2	;volatile
  1600                           
  1601                           ;LCD.c: 22: RE1 = 0;
  1602  0205  1089               	bcf	9,1	;volatile
  1603                           
  1604                           ;LCD.c: 23: RE0 = 1;
  1605  0206  1409               	bsf	9,0	;volatile
  1606                           
  1607                           ;LCD.c: 24: PORTD = databyte;
  1608  0207  0822               	movf	lcdWriteData@databyte,w
  1609  0208  0088               	movwf	8	;volatile
  1610                           
  1611                           ;LCD.c: 25: RE2 = 1;
  1612  0209  1509               	bsf	9,2	;volatile
  1613                           
  1614                           ;LCD.c: 26: RE2 = 0;
  1615  020A  1109               	bcf	9,2	;volatile
  1616                           
  1617                           ;LCD.c: 27: _delay((unsigned long)((1)*(20000000/4000.0)));
  1618  020B  3007               	movlw	7
  1619  020C  00A1               	movwf	??_lcdWriteData+1
  1620  020D  307D               	movlw	125
  1621  020E  00A0               	movwf	??_lcdWriteData
  1622  020F                     u447:	
  1623  020F  0BA0               	decfsz	??_lcdWriteData,f
  1624  0210  2A0F               	goto	u447
  1625  0211  0BA1               	decfsz	??_lcdWriteData+1,f
  1626  0212  2A0F               	goto	u447
  1627  0213  0008               	return
  1628  0214                     __end_of_lcdWriteData:	
  1629                           
  1630                           	psect	text10
  1631  0147                     __ptext10:	
  1632 ;; *************** function _isr *****************
  1633 ;; Defined at:
  1634 ;;		line 12 in file "main.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;		None
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;		None
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  1    wreg      void 
  1641 ;; Registers used:
  1642 ;;		wreg, status,2, status,0, pclath, cstack
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1648 ;;      Params:         0       0       0       0       0
  1649 ;;      Locals:         0       0       0       0       0
  1650 ;;      Temps:          4       0       0       0       0
  1651 ;;      Totals:         4       0       0       0       0
  1652 ;;Total ram usage:        4 bytes
  1653 ;; Hardware stack levels used:    1
  1654 ;; Hardware stack levels required when called:    1
  1655 ;; This function calls:
  1656 ;;		___lwmod
  1657 ;; This function is called by:
  1658 ;;		Interrupt level 1
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662                           
  1663                           ;psect for function _isr
  1664  0147                     _isr:	
  1665                           
  1666                           ;main.c: 14: if(TMR0IF){
  1667  0147  1D0B               	btfss	11,2	;volatile
  1668  0148  296D               	goto	i1l50
  1669                           
  1670                           ;main.c: 15: TMR0IF = 0;
  1671  0149  110B               	bcf	11,2	;volatile
  1672                           
  1673                           ;main.c: 16: TMR0 = 100;
  1674  014A  3064               	movlw	100
  1675  014B  0081               	movwf	1	;volatile
  1676                           
  1677                           ;main.c: 19: if(time_count % 1 == 0) {
  1678  014C  3001               	movlw	1
  1679  014D  07C0               	addwf	_time_count,f	;volatile
  1680  014E  1803               	skipnc
  1681  014F  0AC1               	incf	_time_count+1,f	;volatile
  1682  0150  3000               	movlw	0
  1683  0151  07C1               	addwf	_time_count+1,f	;volatile
  1684                           
  1685                           ;main.c: 21: RC2 = 1; __nop(); RC2 = 0;;
  1686  0152  1507               	bsf	7,2	;volatile
  1687  0153  0000               	nop
  1688  0154  1283               	bcf	3,5	;RP0=0, select bank0
  1689  0155  1303               	bcf	3,6	;RP1=0, select bank0
  1690  0156  1107               	bcf	7,2	;volatile
  1691                           
  1692                           ;main.c: 22: }
  1693                           ;main.c: 24: if(time_count % 1000 == 0){
  1694  0157  30E8               	movlw	232
  1695  0158  00F0               	movwf	___lwmod@divisor
  1696  0159  3003               	movlw	3
  1697  015A  00F1               	movwf	___lwmod@divisor+1
  1698  015B  0841               	movf	_time_count+1,w	;volatile
  1699  015C  00F3               	movwf	___lwmod@dividend+1
  1700  015D  0840               	movf	_time_count,w	;volatile
  1701  015E  00F2               	movwf	___lwmod@dividend
  1702  015F  120A  118A  217A  120A  118A  	fcall	___lwmod
  1703  0164  0870               	movf	?___lwmod,w
  1704  0165  0471               	iorwf	?___lwmod+1,w
  1705  0166  1D03               	btfss	3,2
  1706  0167  296D               	goto	i1l50
  1707                           
  1708                           ;main.c: 25: FLAG_1000MS = 1;
  1709  0168  147D               	bsf	_FLAG_1000MS/(0+8),_FLAG_1000MS& (0+7)	;volatile
  1710                           
  1711                           ;main.c: 26: time_count = 0;
  1712  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1713  016A  1303               	bcf	3,6	;RP1=0, select bank0
  1714  016B  01C0               	clrf	_time_count	;volatile
  1715  016C  01C1               	clrf	_time_count+1	;volatile
  1716  016D                     i1l50:	
  1717  016D  0879               	movf	??_isr+3,w
  1718  016E  1283               	bcf	3,5	;RP0=0, select bank0
  1719  016F  1303               	bcf	3,6	;RP1=0, select bank0
  1720  0170  00FF               	movwf	127
  1721  0171  0878               	movf	??_isr+2,w
  1722  0172  008A               	movwf	10
  1723  0173  0877               	movf	??_isr+1,w
  1724  0174  0084               	movwf	4
  1725  0175  0E76               	swapf	??_isr^(0+-128),w
  1726  0176  0083               	movwf	3
  1727  0177  0EFE               	swapf	126,f
  1728  0178  0E7E               	swapf	126,w
  1729  0179  0009               	retfie
  1730  017A                     __end_of_isr:	
  1731                           
  1732                           	psect	intentry
  1733  0004                     __pintentry:	
  1734                           ;incstack = 0
  1735                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1736                           
  1737  0004                     interrupt_function:	
  1738  007E                     saved_w	set	btemp
  1739  0004  00FE               	movwf	btemp
  1740  0005  0E03               	swapf	3,w
  1741  0006  00F6               	movwf	??_isr
  1742  0007  0804               	movf	4,w
  1743  0008  00F7               	movwf	??_isr+1
  1744  0009  080A               	movf	10,w
  1745  000A  00F8               	movwf	??_isr+2
  1746  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1747  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1748  000D  087F               	movf	btemp+1,w
  1749  000E  00F9               	movwf	??_isr+3
  1750  000F  120A  118A  2947   	ljmp	_isr
  1751                           
  1752                           	psect	text11
  1753  017A                     __ptext11:	
  1754 ;; *************** function ___lwmod *****************
  1755 ;; Defined at:
  1756 ;;		line 6 in file "F:\Program Files\Microchip\xc8\v1.38\sources\common\lwmod.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  divisor         2    0[COMMON] unsigned int 
  1759 ;;  dividend        2    2[COMMON] unsigned int 
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;  counter         1    5[COMMON] unsigned char 
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  2    0[COMMON] unsigned int 
  1764 ;; Registers used:
  1765 ;;		wreg, status,2, status,0
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1771 ;;      Params:         4       0       0       0       0
  1772 ;;      Locals:         1       0       0       0       0
  1773 ;;      Temps:          1       0       0       0       0
  1774 ;;      Totals:         6       0       0       0       0
  1775 ;;Total ram usage:        6 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; This function calls:
  1778 ;;		Nothing
  1779 ;; This function is called by:
  1780 ;;		_isr
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           
  1785                           ;psect for function ___lwmod
  1786  017A                     ___lwmod:	
  1787                           
  1788                           ;incstack = 0
  1789                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1790  017A  0870               	movf	___lwmod@divisor,w
  1791  017B  0471               	iorwf	___lwmod@divisor+1,w
  1792  017C  1903               	btfsc	3,2
  1793  017D  29A7               	goto	i1l1266
  1794  017E  01F5               	clrf	___lwmod@counter
  1795  017F  0AF5               	incf	___lwmod@counter,f
  1796  0180                     i1l1256:	
  1797  0180  1BF1               	btfsc	___lwmod@divisor+1,7
  1798  0181  298E               	goto	i1l1258
  1799  0182  3001               	movlw	1
  1800  0183                     u33_25:	
  1801  0183  1003               	clrc
  1802  0184  0DF0               	rlf	___lwmod@divisor,f
  1803  0185  0DF1               	rlf	___lwmod@divisor+1,f
  1804  0186  3EFF               	addlw	-1
  1805  0187  1D03               	skipz
  1806  0188  2983               	goto	u33_25
  1807  0189  3001               	movlw	1
  1808  018A  00F4               	movwf	??___lwmod
  1809  018B  0874               	movf	??___lwmod,w
  1810  018C  07F5               	addwf	___lwmod@counter,f
  1811  018D  2980               	goto	i1l1256
  1812  018E                     i1l1258:	
  1813  018E  0871               	movf	___lwmod@divisor+1,w
  1814  018F  0273               	subwf	___lwmod@dividend+1,w
  1815  0190  1D03               	skipz
  1816  0191  2994               	goto	u35_25
  1817  0192  0870               	movf	___lwmod@divisor,w
  1818  0193  0272               	subwf	___lwmod@dividend,w
  1819  0194                     u35_25:	
  1820  0194  1C03               	skipc
  1821  0195  299C               	goto	i1l1262
  1822  0196  0870               	movf	___lwmod@divisor,w
  1823  0197  02F2               	subwf	___lwmod@dividend,f
  1824  0198  0871               	movf	___lwmod@divisor+1,w
  1825  0199  1C03               	skipc
  1826  019A  03F3               	decf	___lwmod@dividend+1,f
  1827  019B  02F3               	subwf	___lwmod@dividend+1,f
  1828  019C                     i1l1262:	
  1829  019C  3001               	movlw	1
  1830  019D                     u36_25:	
  1831  019D  1003               	clrc
  1832  019E  0CF1               	rrf	___lwmod@divisor+1,f
  1833  019F  0CF0               	rrf	___lwmod@divisor,f
  1834  01A0  3EFF               	addlw	-1
  1835  01A1  1D03               	skipz
  1836  01A2  299D               	goto	u36_25
  1837  01A3  3001               	movlw	1
  1838  01A4  02F5               	subwf	___lwmod@counter,f
  1839  01A5  1D03               	btfss	3,2
  1840  01A6  298E               	goto	i1l1258
  1841  01A7                     i1l1266:	
  1842  01A7  0873               	movf	___lwmod@dividend+1,w
  1843  01A8  00F1               	movwf	?___lwmod+1
  1844  01A9  0872               	movf	___lwmod@dividend,w
  1845  01AA  00F0               	movwf	?___lwmod
  1846  01AB  0008               	return
  1847  01AC                     __end_of___lwmod:	
  1848  007E                     btemp	set	126	;btemp
  1849  007E                     wtemp	set	126
  1850  007E                     wtemp0	set	126
  1851  0080                     wtemp1	set	128
  1852  0082                     wtemp2	set	130
  1853  0084                     wtemp3	set	132
  1854  0086                     wtemp4	set	134
  1855  0088                     wtemp5	set	136
  1856  007F                     wtemp6	set	127
  1857  007E                     ttemp	set	126
  1858  007E                     ttemp0	set	126
  1859  0081                     ttemp1	set	129
  1860  0084                     ttemp2	set	132
  1861  0087                     ttemp3	set	135
  1862  007F                     ttemp4	set	127
  1863  007E                     ltemp	set	126
  1864  007E                     ltemp0	set	126
  1865  0082                     ltemp1	set	130
  1866  0086                     ltemp2	set	134
  1867  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     24      35
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___lwmod

Critical Paths under _main in BANK0

    _main->_lcdWriteToDigitBCD
    _setupLCD->_lcdWriteControl
    _lcdWriteToDigitBCD->_lcdWriteData

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     669
                                             15 BANK0      9     9      0
                 _lcdWriteToDigitBCD
                          _ser_getch
                           _ser_init
                          _ser_putch
                           _setupLCD
                           _setupSPI
                       _spi_transfer
 ---------------------------------------------------------------------------------
 (1) _spi_transfer                                         3     3      0      30
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setupSPI                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupLCD                                             0     0      0      22
                    _lcdWriteControl
 ---------------------------------------------------------------------------------
 (2) _lcdWriteControl                                      3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ser_putch                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ser_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ser_getch                                            2     2      0       7
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcdWriteToDigitBCD                                  12    10      2     493
                                              3 BANK0     12    10      2
                       _lcdWriteData
 ---------------------------------------------------------------------------------
 (2) _lcdWriteData                                         3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0     265
                                              6 COMMON     4     4      0
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcdWriteToDigitBCD
     _lcdWriteData
   _ser_getch
   _ser_init
   _ser_putch
   _setupLCD
     _lcdWriteControl
   _setupSPI
   _spi_transfer

 _isr (ROOT)
   ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      31       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      23       5       43.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      31      12        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Aug 30 20:26:37 2016

                   __CFG_CP$OFF 0000                              _GO 00FA                             l122 00A7  
                           l211 0235                             l217 023E                             l168 021B  
                           _GIE 005F                             _RB0 0030                             _RC2 003A  
                           _RE0 0048                             _RE1 0049                             _RE2 004A  
                  __CFG_CPD$OFF 0000                             u437 01FB                             u447 020F  
                           _isr 0147                             fsr0 0004                    __CFG_FOSC$HS 0000  
                ??_lcdWriteData 0020                    __CFG_LVP$OFF 0000                            l1230 007A  
                          l1222 005C                            l1240 009A                            l1224 0064  
                          l1216 0038                            l1234 0088                            l1218 004E  
                          l1228 0072                            l1324 013F                            ?_isr 0070  
                          _PEIE 005E                            i1l50 016D                            _RCIF 0065  
                          _TMR0 0001                            _TRMT 04C1                    __CFG_WRT$OFF 0000  
                   main@lowByte 0033                            _main 00C1                            btemp 007E  
                          ltemp 007E                            start 0012                            ttemp 007E  
                          wtemp 007E                           ??_isr 0076                    main@highByte 0031  
                         ?_main 0070                   __CFG_WDTE$OFF 0000                 __end_of___lwmod 01AC  
                         _RCREG 001A                           _RCSTA 0018                           u33_25 0183  
                         _SPBRG 0099                           _PORTA 0005                           _PORTC 0007  
                         _PORTD 0008                           u35_25 0194                           _PORTE 0009  
                         u36_25 019D                           _TRISA 0085                           _TRISB 0086  
                         _TRISC 0087                           _TRISD 0088                           _TRISE 0089  
                         _SSPIF 0063                           _TXREG 0019                           _TXSTA 0098  
    __end_of_lcdWriteToDigitBCD 00C1                  __pbitbssCOMMON 03E8                  __CFG_BOREN$OFF 0000  
                         pclath 000A                           ltemp0 007E                           ltemp1 0082  
                         ltemp2 0086                           ltemp3 0080                           ttemp0 007E  
                         ttemp1 0081                           ttemp2 0084                           ttemp3 0087  
                         ttemp4 007F                           status 0003                           wtemp0 007E  
                         wtemp1 0080                           wtemp2 0082                           wtemp3 0084  
                         wtemp4 0086                           wtemp5 0088                           wtemp6 007F  
               __initialization 0015                    __end_of_main 0147        __size_of_lcdWriteControl 0014  
                        ??_main 002F                          _ADCON0 001F                          _ADCON1 009F  
                        _ADRESH 001E                          _ADRESL 009E                          i1l1262 019C  
                        i1l1256 0180                          i1l1258 018E                          i1l1266 01A7  
                        _TMR0IE 005D                          _TMR0IF 005A                          _SSPCON 0014  
                        _SSPBUF 0013                  __CFG_PWRTE$OFF 0000                          _adcRAW 003A  
          __end_of_lcdWriteData 0214                       ??___lwmod 0074                          _rxbyte 0042  
              __end_of_ser_init 0232                __end_of_setupLCD 01D5                __end_of_setupSPI 01ED  
                        saved_w 007E         __end_of__initialization 0026                  __pcstackCOMMON 0070  
             ??_lcdWriteControl 0020                      __pbssBANK0 0038                      __pmaintext 00C1  
                    __pintentry 0004              __size_of_ser_getch 0009              __size_of_ser_putch 000C  
                       _SSPSTAT 0094           __size_of_lcdWriteData 0013              _lcdWriteToDigitBCD 002A  
                     ?_ser_init 0070                       ?_setupLCD 0070                       ?_setupSPI 0070  
                       ___lwmod 017A             ?_lcdWriteToDigitBCD 0023                         _degrees 003C  
                       __ptext1 0214                         __ptext2 01D5                         __ptext3 01AC  
                       __ptext4 01ED                         __ptext5 0232                         __ptext6 0223  
                       __ptext7 023E                         __ptext8 002A                         __ptext9 0201  
                  __size_of_isr 0033                    _lcdWriteData 0201            end_of_initialization 0026  
          ??_lcdWriteToDigitBCD 0025               __end_of_ser_getch 0247               __end_of_ser_putch 023E  
                    ??_ser_init 0020                      ??_setupLCD 0023                      ??_setupSPI 0020  
                    _time_count 0040                   ?_spi_transfer 0070                 ser_getch@rxbyte 0021  
               _lcdWriteControl 01ED             start_initialization 0015                     __end_of_isr 017A  
                ??_spi_transfer 0020                    _negativeFlag 007B                     _FLAG_1000MS 03E8  
                   __pbssCOMMON 007A                       ___latbits 0002                   __pcstackBANK0 0020  
       __end_of_lcdWriteControl 0201               __size_of_ser_init 000F                        ?___lwmod 0070  
             __size_of_setupLCD 0029               __size_of_setupSPI 0018                 main@controlByte 0037  
       lcdWriteControl@databyte 0022               interrupt_function 0004                      ser_putch@c 0020  
                     _ser_getch 023E                       _ser_putch 0232                       _stepCount 007C  
          __end_of_spi_transfer 0223                spi_transfer@data 0022                spi_transfer@temp 0021  
                      _Distance 0038            lcdWriteData@databyte 0022     __size_of_lcdWriteToDigitBCD 0097  
                    ?_ser_getch 0070                ?_lcdWriteControl 0070                      ?_ser_putch 0070  
              __size_of___lwmod 0032                     _currentStep 007A  lcdWriteToDigitBCD@TenThouDigit 002B  
                      __ptext10 0147                        __ptext11 017A                   __size_of_main 0086  
                      _ser_init 0223                        _setupLCD 01AC                        _setupSPI 01D5  
   lcdWriteToDigitBCD@HunsDigit 0027     lcdWriteToDigitBCD@OnesDigit 002D                        main@dist 0035  
   lcdWriteToDigitBCD@TensDigit 0025     lcdWriteToDigitBCD@ThouDigit 0029                        intlevel1 0000  
              ___lwmod@dividend 0072                     ??_ser_getch 0020                     ??_ser_putch 0020  
         __size_of_spi_transfer 000F                      _OPTION_REG 0081                 ___lwmod@divisor 0070  
               ___lwmod@counter 0075                   ?_lcdWriteData 0070          lcdWriteToDigitBCD@data 0023  
                  _spi_transfer 0214                    _stepCountNeg 003E  
